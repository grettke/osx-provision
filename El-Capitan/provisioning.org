#  LocalWords:  IOSXECA PHOSI PHOSDI IOSEXECA gcr Xcode VC orion orgion rsa github

#+STARTUP: showeverything

* STOP!
:PROPERTIES:
:ID:       orgmode:gcr:vela:F4C8ADF4-C074-495B-BAD8-260D3F9CAAF2
:END:

These are *all* of my /personal notes/ on provisioning my boxes. They won't make
sense unless you read all of them. They are long… you won't want to :). You
/are/ welcome to read them.

If you are here then you probably only want to see the setup steps. They are a
subset of this document. They live in =provisioning.md= and get tangled to
individual files for implementation.

* Goal
:PROPERTIES:
:ID:       572893EF-E80B-411B-9355-8CAB3DB23C27
:END:

** Desire
:PROPERTIES:
:ID:       17BA9F22-3B3E-427E-AC9B-0DF8D10BFD32
:END:

- To quickly and easily
  - Explore cognitive spaces using operating systems and software
  - Try, fail, learn, improve, and repeat
  - For expensive operations measured in time and complexity
    - Minimize their execution time
      - Central Processing Unit (CPU)
      - Input/Output (IO)
    - Rebound from failure
  - Share

** Satisfaction
:PROPERTIES:
:ID:       77F8D1AF-B388-4512-B9C2-79F97533CC88
:END:

- First-class support for OS X, Windows, Linux and all of their software
- Manage machines as easily and flexibly as you would with version control
- Use the fastest devices possible for every operation
- First class operating system image management
- Virtual machines (VM)

** Decision
:PROPERTIES:
:ID:       643E82D4-08E8-40B5-9006-3936A0775A35
:END:

- Current:
  - Macintosh Computer (Mac)
  - OS X
  - VMWare Fusion Professional
- With /Best/:
  - Solid State Disk (SSD)
  - RAM
  - CPU count and speed

** Lessons Learned
:PROPERTIES:
:ID:       0D8B4834-2E1E-4F1A-9299-5948A1FFAC55
:END:

- Verify easily verifiable operations
  - Installation scripts often reveal new information
- Either name things with a meaningful name or a 6 digit UUID from
  [[https://www.uuidgenerator.net/][Online UUID Generator]]
  - In the beginning this helped me keep track of disks, VMs, and software;
    by working through it I found that names were more meaningful, only after
    developing the sections for the definition (and name)
- Evidence based; no fantasy or delusion
  - Decide using experience; in absence make a best decision and move on
  - It takes at least 3 iterations before things start making sense
- "Thinking ahead" is crippling
- Snapshot
  - After expensive operations
    - Can always delete them later
    - Easy to for get how to do
  - Snapshot frequently; you never know how things will go
    - You will forget to do this
    - You will only care after something got wrecked
- Don't go to sleep in the middle of configuration sections
- Get the fastest Internet sold before starting
- Remember that Control-Command-F pressed inside of a host tells VMWare
  to go to and from full-screen.
- VMWare's folder sharing
  - Works perfectly for sharing between two guests a lot of the time. When it
    quits working I log in and out of one of the guests and it works again
    - Happens often
  - Is happy with Finder and unhappy with Eshell, so don't use Eshell in shared
    directories. They just stop working.
- Java
  - Sometimes the installation directory includes the build number. Sometimes
    it does not.
- Writing 100% automated idempotent scripts is worth the effort
  - It is not worth the effort for theoretical reasons because it is usually
    faster to do it by hand. The first 2 or 3 times you perform a task, it is
    slow, and then you figure it how to do it all correctly and then you can
    perform it quickly. You might ask yourself "If I can do it this quickly then
    why bother automated it?" because of the extra effort. That is a good
    question. When you are doing it, it is faster to do it by hand. Here is the
    problem that I ran into: you make mistakes that you find long after the
    set up. The /right/ thing to do is to correct the documentation/scripts and
    then rebuild the image. If you left manual steps then you have to do that
    work all over again. I know this seems obvious, but at the time, it didn't
    seem worth the effort of automating everything. Now much later, I'm left
    with a system imaged somewhat differently than the documentation. It is
    worth the effort to automate everything. The item on snap-shotting makes this
    easier.
  - After using them only 2 times you will feel how flexible and fun it makes
    the whole development process
- Never allow manual steps
  - If they are unavoidable then move them all to the same place to get them
    over with and start the automated part
- Make VMWare Disk Drive capacity in multiples of 8
  - That way they can be easily shared and transferred on SD cards
- VMWare Fusion hard disk size
  - VMWare does not pre-allocate disk space and doesn't give you the option
    to do so. This is different than VMWare Workstation and that might surprise
    you.
- Spending most of my time on OSX
  - Started out planning on using 100% OSX. That led me to realize that I
    value OSS/Emacs the most. So I started to set up Linux. Through that effort
    I realized how much I've invested on the OSX platform. I felt that not only
    would it take too much additional effort to migrated to Linux; but more-so
    that the investment would take away from future work I would be doing on
    OSX. Both thing are surprising.
- A new to me option is to download everything and don't configure it until you
  need it
  - Pros
    - Faster setup
    - Only use what you need
    - Nothing stopping you from configuring anything; key is to know what you
      want immediately available when you restore a snapshot or image, assuming
      that it is not automatically configurable or you don't want to
      automatically configure it (which is rare)
- Deleting the RP
  - DU does not list the RP. CCC does. You work a lot with DU and a little with
    CCC. When you modify the disk partitions, you have to rebuild the RP with
    CCC. It is easy to forget to do this. I am not sure now how to restore the
    RP without a working RP.
- Utilize compressed disk images
  - Save space
  - On the SSD they are fast
- How to utilize hosts and guests
  - I had the idea that I would work 100% in the guest because that is simple
    and familiar. It didn't work out well because audio in Skype was horrible.
    So I installed Skype in the host and use it there. Now I use both host and
    guest.
    - Is it a waste of space to use the same provisioner for both host and
      guest? No. It is important to have one script that does the right thing
      instead of having to worry about two boxes. It also fails the goal of
      having a single transportable and re-usable guest that can easily and
      completely move between hosts.
- Always use the present tense for directions and the past tense for notes
- Software downloads during provisioning often fail
- =brew= is explicit
  - You need to pay attention to the command at least once. Some applications
    will auto-install them self when you try to run them, and that is great.
    Others don't and run from the Caskroom. Sometimes the latter is fine, other
    times it is not.
- Working on identically provisioned boxes where one will replace the other
  - Easy to confuse them and muck things up on the "good one"
  - Easy to test valuable changes in the "new one" and blow them away before
    pushing them to a remote git repo or migrating them back into the "good one"
    to do so
  - Forget about what you did where, and blow it away while reverting snapshots
- Ignore the urge to provision on-the-metal until you've provisioned a box 5-10
  times and have used it for a month or two without major changes
  - Every other time will be to soon
- Backups
  - Keep everything you value
    - On another computer
      - Local or remote
  - Minimize stress during non-trivial provisioning efforts
- Download speed is the weakest link
  - Separate work into separate steps to get downloads finished and configure
    later
- Every single provisioning run is different because
  - You learn new things: want to fix stuff, want to make it better
  - Things change: new versions, stuff not available
  - Everything you script ends up being designed around being able to make
    mistakes
    - Easily resize partitions
    - Easily reprovision (idempotent)
    - Easily recover from unknowns and errors and learning

* Dictionary
:PROPERTIES:
:ID:       BF6FF97E-5530-4EBA-97C3-02A2EF259137
:END:

- Carbon Copy Cloner (CCC)
- Disk Utility (DU)
- Install OS X El Capitan Application (IOSXECA)
  - Application used to
    - Upgrade current installation to 10.11
    - Create USB boot-disks to install 10.11
    - Drag into VMWare Fusion to install guests
- Pristine Host Operating System Image (PHOSI)
  - A hard disk imaged from Apple
- Pristine Host Operating System Disk Image (PHOSDI)
  - A disk-image created from a ~PHOSI~
- Recovery Partition (RP)

* Preparation
:PROPERTIES:
:ID:       1BF6D42F-2F80-467E-B75C-DB2C88F0B4BE
:END:

** External Drive
:PROPERTIES:
:ID:       9EC3FF1F-8416-449D-8860-3B4ABCEBB09B
:END:

Get a 7200RPM 1TB external disk drive with USB3 or Lightning.

Create a partition named =Storage= that is at least 100GB. The =EXT:= naming
convention is to indicate that it lives on an external device. This is helpful
to make sense of partitions there versus on the Macintosh HD. That is not part
of the name of the partition itself. I'll use that naming also to indicate
computers that contain a single disk drive.

** Software
:PROPERTIES:
:ID:       3BC9B846-919F-4395-8926-8C2AABB0FF6A
:END:

- Before provisioning software installs, I downloaded these manually and stored
  them because they are critical to the setup process

*** Carbon Copy Cloner (CCC)
:PROPERTIES:
:ID:       93F797EC-1166-4667-A2ED-C8251CB9998A
:END:

[[https://bombich.com/][Purchase]] the latest version that supports El Capitan. Download it along with the
license to =EXT:Storage=. Install it on the =Support Computer=.
*** VMWare Fusion
:PROPERTIES:
:ID:       B846A16A-4E1C-4968-B303-301923989BD8
:END:

[[https://www.vmware.com/products/fusion][Purchase]] a copy and download it to =EXT:Storage=. Download your license key.

** Support Computer
:PROPERTIES:
:ID:       74903C97-520F-4FE1-B2AA-09F1DAB976D7
:END:

Keep a working Mac nearby. You will use it to work with the contents of
your Git repositories, research configuration steps, and rest easy knowing that
you've always got a working machine.

Make sure that it has Internet access and download all of your Git repositories
required for configuring these machines.

Don't try use your host computer for this role by booting it to an external
drive; it is too easy to confuse partitions and what you are doing.

Use CCC to clone this Mac's partition, =Support:Macintosh HD=, to a partition on
=EXT=. The easiest thing to do is to connect =EXT=
to =Support Computer=. Create a new partition big enough to hold it and perform
the clone. Name it =EXT:Utility=. Reboot to it to test it.

** Host Computer: 44fad7
:PROPERTIES:
:ID:       EE23E7E0-4BAC-4B57-96EA-764F84A2F054
:END:

- Collect the Pristine Host Operating System Image (PHOSI)
  - Pristine means that it has never been logged into or configured
  - Has the latest OS X on it with at least the second fix pack or later
  - Verify that it contains the RP for that OS X on the disk
    - If the imaging takes less than 10 minutes then they didn't include the
      RP
  - You can easily get this from an appointment at the Genius Bar
- Create the Pristine Host Operating System Disk Image (PHOSDI)
  - Take your Mac home
  - Boot from =EXT:Utility=
  - Use CCC
    - From the host computer's =PHOSI=, =Host:Macintosh HD=
    - To
      - A new =PHOSDI=; *read-only* and *compressed* disk image
      - Located on =EXT:Storage=
    - Execute the imaging task
- Test =PHOSDI=
  - Boot into =Host:Macintosh HD=, configure it
  - Boot into =EXT:Support= and re-image =Host:Macintosh HD= from =PHOSDI=
  - Boot into =Host:Macintosh HD=
    - It should appear pristine, you need to enter all of the installation
      information again. This will be re-imaged again soon so don't worry
      about this.
  - Copy =EXT:Storage PHOSDI= to =Host:Storage=
- Create the =Host:Utility= partition using =PHOSDI=
  - Boot into =EXT:Support=
  - Create 1 new partition on =Host=, named =Utility=: 16GB
    - Now there are 3: =Macintosh HD=, =Support=, and =Utility=
  - Verify that you can
    - Boot into =Host:Support=
    - Install CCC
    - Access the =Storage= partition
      - CCC images
      - Disk images
      - Software
      - Scripts
* Notes on Machine Configurations & Snaphots
:PROPERTIES:
:ID:       2A536BBD-5CF0-43B8-A87C-9E2260ADE2F5
:END:
** Base (09d89d)
:PROPERTIES:
:ID:       33FE2B6C-EE9E-407E-96C3-41675669C9AE
:END:

- Configured with a =sysop= like above
- Unprovisioned
- Used for quickly cloning for user for anything

**** Steps
:PROPERTIES:
:ID:       CC55FA18-ADF8-4FE2-AA8E-477A3449F86F
:END:

- Obtain ~IOSEXECA~ via the App Store
  - Can do this on a Mac or in a VM of a prior version of OSX
  - Back it up to both =External:Storage= and =Host:Storage=
- Start VMWare Fusion, click File \rarr New, the "Select the Installation Method"
  dialog appears
- Create a new machine by dragging the OS X Installer onto the dialog
- Continue
- Default configuration don't change anything
  - 40GB HD, 2 CPU, 2GB RAM seems fine and allows you to have another VM
    running for notes during configuration
  - Assuming that 40GB will be enough to allow OS updates as they occur over
    the lifetime of the operating system
  - Full-Clones will configure the machine in unique ways not worth capturing
    here
- Click Finish
  - Name it "El Capitan - Base (09d89d)" and leave all of the default machine configuration
    alone
- Installation takes 20m every time
  - Installer reports "35s remaining" accurately, and then 0s remaining
    inaccurately, and sits there for about 5 minutes
  - Then it reports 20m remaining, and completes in 15m
  any personal information or configuration
- Set up box and create =sysop=, don't configure, don't provision:
  - Use the name =sysop= and password =sysop=
  - Don't do it like you set up the host
  - Don't provision or customize anything
  - Don't set up printers or resolution
  - Just create the account and do nothing more
- Shutdown

**** Snapshots
:PROPERTIES:
:ID:       7DB397B7-D0EC-4AD1-9BC8-3B80452D8890
:END:

***** First Run (d0a475)
:PROPERTIES:
:ID:       9F90A8E9-E4B3-486D-A9BD-243EF10CEAF1
:END:

- Installed, created user, shutdown
- This was the first run

** Personal (3a546a)
:PROPERTIES:
:ID:       E6395620-7A49-4FEC-9E06-15B27C1FC21C
:END:

*** Base (3d4a52)
:PROPERTIES:
:ID:       0B390891-5510-4703-97D7-29949F3D4436
:END:
**** Plan
:PROPERTIES:
:ID:       0967F184-B4A0-4B24-AB0D-5D3E95C3BB13
:END:
- *Full-Clone of 09d89d*
  - Right Click d0a475 \rarr Create Full Clone\ldots
  - Named "El Capitan - gcr (3a546a)"
- Machine configuration
  - Processors
    - 3 cores
      - [[https://pubs.vmware.com/fusion-7/index.jsp?topic=%252Fcom.vmware.fusion.help.doc%252FGUID-4EABCE73-69AB-4665-A5BB-B34C5B736CC7.html][Choosing]]
    - 6144 RAM
      - 2048 (2 GiB) for host
      - Two guests running at the same time
        - 7168 (7 GiB) each
    - Enable hypervisor
    - Enable code profiling
  - Hard Disk
    - 250.00 GB HD
  - Sharing
    - =Host:Storage=
- Start the VM
- Resize the disk
  - Note that on a real Mac you can't resize a partition that OS X has
    booted from so you might boot from the RP to perform
    the resize instead. This doesn't work on the VMWare drive. If you try it,
    it will fail for a couple of reasons like "The partition is not journaled"
    or "The operation filed". Instead, boot into the OS and resize the partition
    there.
  - Start DU
  - Choose VMWare Virtual SATA Hard Drive Media
  - Click "Partition"
  - Look at it to get a sense of the space for the main partition and what is
    actually available
  - Close DU
  - Read [[https://themacwrangler.wordpress.com/2015/10/21/resizing-el-capitan-mac-volumes-under-vmware-fusion/][this]] for a reference
  - Open Terminal
  - Execute:
    #+NAME: 1C325C18-9A6B-4A33-A969-42CC4DBE0598
    #+BEGIN_SRC sh
    sudo diskutil resizeVolume / R
    #+END_SRC
  - View the results, they should be what you expect
  - Verify in DU
- Change =sysop= password
- Install VMWare Tools
  - In El Capitan, the display driver works correctly so you can set any
    resolution via VMWare Fusion. You can verify in the VM.
- Provision this machine
  - Use the UUID
- Perform the "Manual Steps" setup for the sysop user on this box just like the
  host
  - The host =sysop= instruction note things unique to the host and guest
- Provision =sysop=
- Create, login as, perform the "Manual Steps", and provision =gcr=,
  log out and in again
- Install software updates via App Store
- Shutdown

*** Xcode (39e716)
:PROPERTIES:
:ID:       87802E09-F643-468B-819B-3C8EEB2D3E09
:END:

Downloading Xcode takes a long time so snapshot it.

*** VC/Shell (283c98)
:PROPERTIES:
:ID:       C31C9412-2922-4E4A-80BB-20749A95D742
:END:

Originally this was part of the =Writing= setup. I moved all of those steps into a
script

*** Git
:PROPERTIES:
:ID:       E2BCA2F2-6647-424D-B496-4623E800FD4A
:END:

*** gcr
:PROPERTIES:
:ID:       302F5DF8-89F3-409F-8F2F-07B9DD424D85
:END:

This box configuration will follow and utilize the manual and automated
provisioning scripts for the "writing" scenario.

**** Snapshots
:PROPERTIES:
:ID:       147ACE5F-775B-4D36-9EC6-740D05AA4157
:END:

***** 000 (65289699-3B29-48A0-9135-A0BD467CC47E)
:PROPERTIES:
:ID:       3209C6EA-4408-478F-B854-287CBB126591
:END:

- Create a new machine using
  - IOSXECA
  - Settings
    - Sharing
      - Shelf
      - Mirror
    - Processors & Memory
      - Processors: 2
      - Memory: 5120MB
        - 7GB for each of the two boxes and 2GB for the host makes the guests
          too slow
        - 6GB and 2 boxes made the host run out of memory in a "freak event"
          that happened on two host systems
      - Advanced options
        - Starting to wonder how expensive it is to check these
        - [X] Enable hypervisor
        - [X] Enable code profiling
    - Display
      - [X] Use full resolution for Retina display
      - Scaled resolution :: All View Modes
      - Virtual Machine Resolution
        - Single Window :: Resize the virtual machine and the window
        - Full Screen :: Resize the virtual machine to fit the screen
    - Hard Disk (SATA)
      - 256GB
      - Click "Apply"
- Close the Settings
- Boot the box <2016-01-08 Fri 19:45>
- Progress indicator appears <2016-01-08 Fri 19:45>
- Progress indicator remained on left end for a while
  - It jumps around between far left and middle
- Progress indicator closes <2016-01-08 Fri 19:47>
- Menu appears, chose English <2016-01-08 Fri 19:48>
- Chose "Install OS X"
- Continue
- Continue
- Agree
- Agree
- Macintosh HD (42GB)
- Install
- Install sequence begins <2016-01-08 Fri 19:49>
  - Sometimes it says "About a second remaining" for the entire duration then
    completes. Other times it shows a countdown to 0 and then says "About a
    second remaining" for a long time and then says "About 0 seconds remainng"
    for a while and then completes.
- Reboots into another install sequence <2016-01-08 Fri 19:54>
- Progress bar again sits on the left side
- No message for a while
- Says "Installing: About 20 minutes remaining" <2016-01-08 Fri 19:55>
- Keyboard and palm-rest warm <2016-01-08 Fri 19:59>
- Fan turned on <2016-01-08 Fri 20:00>
- Another progress indicator appears <2016-01-08 Fri 20:07>
- Installer completed and "first-boot" screen appeared <2016-01-08 Fri 20:07>
- Took a snapshot of this running box

***** 001 (47FEE341-D051-4CC0-8C59-324CA57E4CBB)
:PROPERTIES:
:ID:       B43DDE6F-65B3-45AF-AAA7-0348FD7974B4
:END:

- Perform only account creation steps for creation of =gcr= following the
  "Common Manual" flow
  - Because this is getting snapshotted it only needs to go this far. The goal
    is to set up the base machine correctly now.
- Read [[https://themacwrangler.wordpress.com/2015/10/21/resizing-el-capitan-mac-volumes-under-vmware-fusion/][this]] for a reference
- Open Terminal
- Execute:
  #+NAME: 3EE90C6E-8C89-4845-98DF-DE7D603D3274
  #+BEGIN_SRC sh
  sudo diskutil resizeVolume / R
  #+END_SRC
- View the results, they should be what you expect
- Verify in DU
- Install VMWare Tools
- Test it
  - Shared Folders
  - Windows versus Full-Screen
    - Check resolution in full, and windowed-half-screen
    - Check it by choosing "Scaled" and after checking it choose
      "Default for display"
- Get updates from AppStore
  - When prompted: Turn on Auto Updates
- Check for updates again
- Shutdown
- Take a snapshot (while box is off)

***** 002 (309AC7C5-FE7F-42F8-8680-BA78B6D7C239)
:PROPERTIES:
:ID:       A1D507D9-2A74-4660-931D-604442308CF9
:END:

- Steps are: configuration-writing-01-manual.org
- Perform the remaining account configuration and Xcode/CLT setup in the
  "Common Manual", choosing to install Xcode
  - Don't set up the profile or provision or do anything beyond there
  - Goal is to snapshot more frequently than just at the divisions between
    runnning the provisioner scripts (both manual and automated)
- Check for updates again
- Shutdown
- Take a snapshot (while box is off)
- From here snapshots should occur at script divisions

***** 003 (D9D1B231-DAC8-4EC3-A140-7EC60D4914AF)
:PROPERTIES:
:ID:       162811B7-0370-405A-AF12-353E1BC7E4C2
:END:

Steps are: configuration-writing-02-automated.sh
- Follow the directions to run the automated provisioning =02=
  - Remember: nothing is configured now
  - Downloads failed 2 times; re-ran the script
  - Bug when copying over the new profile; re-wrote that part 5 times
  - =xquartz= installer is slow
  - =org-mode= checkout is slow
  - Noticed bugs with how the final Emacs linking goes
  - Forgot that all of this was untested
  - Script is happy now
  - Downloads are slow
  - Restarting brew sometimes restarts downloads at their original progress
  - How to drop MacTeX.pkg into the brew cache in case the download never
    completes?
    - Read [[http://mygeekdaddy.net/2014/12/05/how-to-install-a-local-file-in-homebrew/][this]]
    - Tried renaming the pkg to "mactex-latest.pkg, didn't work
    - Tried renaming it to "mactex-latest.pkg.incomplete", didn't work
    - Quit trying and kept re-running the download until it completed and
      installed
    - Downloading mactex via direct-download is too slow
  - Out of the 10 tries to finish mactex and fix bugs, I wanted to manually fix
    things and move on. I didn't, and that is probably good. In the end, the
    automatic provisioner did it's job and I didn't do anything manually. That
    is a hard habit to break.
  - There is a different issue on every run. Sometimes the org-mode git checkout
    never completes. It sits at 98% forever. Control-Z and re-ran
- Named box "osiris"
- That is it; didn't even click around or inspect anything.
- Kept forgetting to copy the new version of the script onto the box; should
  automate that
- Shutdown
- Take a snapshot (while box is off)

***** 004 (59F8EDFF-5C26-48B2-9CEF-28BDD316B629)
:PROPERTIES:
:ID:       B05C0718-0C5D-43A2-9F17-7753666F38D0
:END:

- Steps are: configuration-writing-03-manual.org
- Manually set the background to the galaxy
- Bug fix in provisioner
  - Don't install karabiner on a guest, so, fixed scriptand manually removed
    from the boxes
  - VLC doesn't work, replaced it with MPlayer OSX Extended
  - Added Opera
  - Added cask project checkout to easily browse Casks
- Every time I restore the image now I have to make all of the corrections just
  because I don't want to have to install MacTeX again
  - Note: All expensive operations should isolated via snapshots in addition to
    just using them.
- Stuff that can't get tested until Emacs is set up
  - Git key stuff
  - Fonts for Emacs, can see in profile though
  - Deltawalker
- Rebooted and reviewed the steps again
  - Tried DW again just to be sure
- Shutdown
- Take a snapshot (while box is off)

***** 005 (579C50D8-9665-4F7F-9F14-91CE7A735667)
:PROPERTIES:
:ID:       A9FAC4AE-DF24-4C60-9821-B498B5CA15F1
:END:

- Blew away ~/writing
- Downloaded osx-provision.zip from github to ~/Downloads and expanded it
- Ran configuration-writing-04-automated-generic.sh
- Ran personal git setup
- Run configuration-writing-05-automated-personal.sh
- Worked through configuration-writing-06-manual-personal.org, working with
  help.org
  - Emacs runs fine
  - Tangling works fine
  - Image generation works
  - eshell works
  - ccrypt works
  - ispell works
  - weasel words works
  - langtool
    - Initially didn't work: "langtool--check-command: java command is not found"
    - java is in the path
    - java_home was not set
    - works
  - Koma letter works
  - No startup messages
  - Weaving everything works
- org2blog is missing
  #+NAME: F045C7B2-1766-42ED-B904-5A1A0892618D
  #+BEGIN_SRC sh
  cd ~/src
  git clone https://github.com/punchagan/org2blog.git
  ,#+END_SRC sh
  - Manually fixed it
- Rebooted
- Test DeltaWalker
  - In Finder, Compare two files with DW works
  - The value of difftool.deltawalker.cmd
    - Looks fine in the script, looks weird when I list it and that is OK
    - In the terminal, calling that path makes DW run as expected
  - This works fine
    ,#+NAME: 2EF21564-820C-40B6-A995-BC74941CB71D
    ,#+BEGIN_SRC sh
/Applications/DeltaWalker.app/Contents/MacOS/git-diff /opt/homebrew-cask/Caskroom/deltawalker/2.1.2/Extras/samples/q0.txt /opt/homebrew-cask/Caskroom/deltawalker/2.1.2/Extras/samples/q1.txt
    #+END_SRC
  - Just tested a 3 way merge and that worked totally fine. Need to get plain
    diffs working
  - Right now, not sure what changed, and Git diff with DW is working. Suspect
    that up above, I re-wran the command to set the external diff tool for Git,
    not touching merge at all, well maybe that had something to do with it?
- Noting that I want a command for checking for Git working copy bad states
- Checked for updates
- Shutdown
- Take a snapshot (while box is off)

***** 006 (61B52468-9004-4B8C-9C9B-32D05F3F16AC)
:PROPERTIES:
:ID:       A660C72A-6756-4524-AF2F-57D1E9BD5EF0
:END:

- Forgot to empty the trash
- Forgot racket for resume
  - Installed it manually
  - Built and tested it
  - Updated provisoner to install
  - Updated doc for testing out the installation to include testing this
- Flash Player
  - Cask installed software does not work
  - Manually installed software does not work

* Provisioning
:PROPERTIES:
:ID:       provisioning
:Effort:   energy
:END:

- *Start* with a local copy of this repository either by downloading it in a ZIP
  file or pulling it with Git
- ~Steps~ implements provisioning
  - ORG files are manual steps
  - SH files are shell scripts which may require human input
  - Perform them in order of their file names numerically eg ~01..02..03..n~
  - The steps are tedious, time consuming and boring so they are broken up into
    to logical units to make it easy for you to take a break and finish later
    without forgetting where you are and what you were doing
    - For example you might run the script to install \TeX overnight and
      configure it a day later
- ~Testing~ tells you if it worked
- Only read this document for
  - An explanation of the provisioning steps
  - Reference

** Steps
:PROPERTIES:
:ID:       6ACCC2CE-5EB4-42D6-AD12-0DC836C2A3FD
:END:

*** OS X
:PROPERTIES:
:ID:       EAD703CC-3234-4438-930D-C1BB2F50DF6B
:END:
**** Installation
:PROPERTIES:
:header-args: :tangle "01_os-x-installation.org"
:ID:       46781470-E45C-4E6E-98E9-CD41507FF6FE
:END:

#+NAME: 639707FE-FE60-439E-A8C8-9FBD9936D1C4
#+BEGIN_SRC org
- Action Prefix for Boxes:
  - Host :: "On the Metal"
  - Guest :: "Virtualized"
- Re-image your box
- During system configuration /before/ creating a user YES log into the App Store
- Make a user named ~gcr~ and choose an avatar
- Install software updates
- Development Tools
  - XCode
    - This is optional!
    - This step is not necessary to use the Brew stuff, the CLT provides
      everything
    - If you want it them go to the App Store and Install it
    - 4.5GB download
  - Command Line Tools (CLT)
    - Install the CLT.
    - Run this and choose *Install*.
      ,#+BEGIN_SRC sh
      xcode-select --install
      ,#+END_SRC
- Utility Scripts
  - Mount only required volumes
    - Clarify
      - Spotlight suggests applications and files on those volumes and
        you usually don't want that
      - Applications get locks on files on non host volumes
    - For =host1= that means =host1= and =Storage=
    - Write a shell script and run it at logon
      - Customize this for the install partition
        ,#+BEGIN_SRC sh
  #!/usr/bin/env bash
# -*- mode: sh; -*-
diskutil unmount /dev/disk0s3
diskutil unmount /dev/disk0s4
diskutil unmount /dev/disk0s6
diskutil unmount /dev/disk0s7
diskutil unmount /dev/disk0s8
        ,#+END_SRC
- System Preferences
  - Desktop & Screensaver
    - *(Host)*: "Message", 10m
    - *(Guest)*: "Message", 5m
  - *(Host)* Display \rarr Maximize resolution
  - Energy saver
    - *(Host)*
      - On power
        - Display off at 15m
        - Prevent computer from sleeping automatically when display is offp
          when display is off
      - On battery, Screen sleep 5m
        - Don't slightly dim the display on battery power
    - *(Guest)*
      - Computer sleep: never
  - *(Host)* Keyboard \rarr Modifiers
    - Caps Lock \rarr Control
    - Control \rarr Caps Lock
  - Mouse
    - *(Host)* Connect Bluetooth mouse
    - Tracking Speed: 20%
  - *(Host)* Trackpad
    - Point & Click
      - Secondary click: TRUE
      - Tap to click: TRUE
  - *(Host)* Printers & Scanners
    - Add printer(s)
  - Sound
    - Show volume in menubar
  - *(Host)* Bluetooth
    - Show in menu bar
  - Users & Groups: Enable Guest User without Parental Controls.
- *(Host)* Show Keychain Access in Menubar
  - Start KeyChain Access
  - Preferences
  - Show keychain status in menubar
- Finder
  - Preferences
    - Sidebar
      - Favorites
        - <Home>
      - Devices
        - <Computer>
#+END_SRC

**** Configuration
:PROPERTIES:
:header-args: :tangle "02_os-x-configuration.sh" :tangle-mode (identity #o755)
:ID:       46781470-E45C-4E6E-98E9-CD41507FF6FE
:END:
***** Machine
:PROPERTIES:
:ID:       44A4C35C-E27A-462F-BBB2-A178F70194D8
:END:

This script should be idempotent.
Set the computer's "names". There are 3 resources ([[http://ilostmynotes.blogspot.com/2012/03/computername-vs-localhostname-vs.html][1]], [[http://osxdaily.com/2012/10/24/set-the-hostname-computer-name-and-bonjour-name-separately-in-os-x/][2]], [[http://hack.org/mc/writings/mac-survival.html][3]]) that I used to make
sense of the different names. It is simple, and new to me.

Originally I set every name to the same value. Doing so didn't result in
warnings but it did result in an incorrect "Computer Name" and
"Local Host Name". Based on that experience, I'm going to give names using this
strategy to name machines now:

- HostName
  - All lower case
  - <Logical name>-<UUID>.<org|vm>
- LocalHostName
  - All lower case
  - <Logical name>-<UUID>
- NetBIOS
  - All lower case
  - <Logical name>-<UUID>
- ComputerName
  - "<Logical name> (<UUID>)"

Defining this naming approach helped me learn more about the intent of the
name and what I wanted from them.

#+NAME: 291FDE06-DF44-4156-A013-B763A8727B00
#+BEGIN_SRC sh
sudo scutil --set HostName ""
echo "Enter HostName (plain old hostname): "
read vhn
sudo scutil --set HostName $vhn
sudo scutil --set LocalHostName ""
echo "Enter LocalHostName (name for Bonjour services): "
read vlhn
sudo scutil --set LocalHostName $vlhn
sudo defaults delete 'com.apple.smb.server' NetBIOSName
echo "Enter NetBIOSName (name that Windows boxes will see): "
read vnbn
sudo defaults write 'com.apple.smb.server' NetBIOSName -string $vnbn
sudo scutil --set ComputerName ""
echo "Enter ComputerName (human friendly GUI name): "
read vcn
sudo scutil --set ComputerName $cn
#+END_SRC

Display login window as name and password.
#+NAME: 2F39C8B9-CA25-4C94-8E77-AD348D5235A9
#+BEGIN_SRC sh
sudo defaults write /Library/Preferences/com.apple.loginwindow.plist SHOWFULLNAME -bool true
#+END_SRC

Login message.
#+NAME: 850816F3-B82E-4EE0-9895-6E99CB6A7593
#+BEGIN_SRC sh
sudo defaults write /Library/Preferences/com.apple.loginwindow.plist LoginwindowText -string "
All creativity is an extended form of a joke.
          — Alan Kay"
#+END_SRC

Cycle through system information by clicking on the clock at the login
screen[fn:1f8bbd98e464862a:https://apple.stackexchange.com/questions/155429/view-machine-name-on-login-screen].

#+NAME: 91AA8678-421C-4F05-8ECA-1D1219582C7E
#+BEGIN_SRC sh
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName
#+END_SRC

Disable Gatekeeper.
#+NAME: DBE84671-1CC0-4DBA-AC7C-72F9EAC857A0
#+BEGIN_SRC sh
sudo spctl --master-disable
#+END_SRC

***** User
:PROPERTIES:
:ID:       B0472249-DD96-45C4-A558-088A56501C3D
:END:

This script should be idempotent.

- These commands are all [[https://github.com/kitchenplan/chef-osxdefaults/tree/master/recipes][copied]]
  - Including the documentation
  - Some of them have corrections and changes
****** Globals, Logical or Literal
:PROPERTIES:
:ID:       EC01CF33-40EE-4F63-8A27-A88DE32FC557
:END:

Set background.
#+NAME: 6755B45A-4331-4CA4-89D5-7A5906C3966A
#+BEGIN_SRC sh
cd ~/Pictures/
curl -O http://www.wisdomandwonder.com/wordpress/wp-content/uploads/2015/02/M101-ORG.jpg
sqlite3 ~/Library/Application\ Support/Dock/desktoppicture.db "update data set value = '~/Pictures/M101-ORG.jpg'";
#+END_SRC

Set default volume.
#+NAME: 57F27EEA-630B-4CB4-9A04-27091C4AD4CB
#+BEGIN_SRC sh
osascript -e 'set volume output volume 50'
#+END_SRC

Disable auto-correct.
#+NAME: 02346DB0-0D1F-4A80-89ED-C8B723C05BB6
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' NSAutomaticSpellingCorrectionEnabled -bool false
#+END_SRC

Expand print panel by default.
#+NAME: 207B6C0E-E636-4FAB-A859-6E3CA370C40E
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' PMPrintingExpandedStateForPrint -bool true
defaults write 'NSGlobalDomain' PMPrintingExpandedStateForPrint2 -bool true
#+END_SRC

Expand save panel by default.
#+NAME: FBAD5CA1-F984-46AE-940D-90B1FC6C8454
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' NSNavPanelExpandedStateForSaveMode -bool true
defaults write 'NSGlobalDomain' NSNavPanelExpandedStateForSaveMode2 -bool true
#+END_SRC

Automatically quit printer app once the print jobs complete.
#+NAME: F6899984-2233-4027-BBEF-1005657C7B5E
#+BEGIN_SRC sh
defaults write 'com.apple.print.PrintingPrefs' 'Quit When Finished' -bool true
#+END_SRC

Hide the menubar.
#+NAME: 29013D61-3A46-42CB-80CF-7C896C69D56E
#+BEGIN_SRC sh
defaults write NSGlobalDomain _HIHideMenuBar -bool true
#+END_SRC

Add battery percentage in menubar.
#+NAME: 8351B207-A376-4149-A876-4E3E8CE06732
#+BEGIN_SRC sh
defaults write 'com.apple.menuextra.battery' ShowPercent -bool true
#+END_SRC

Add date in menubar clock.
#+NAME: 3525C306-F373-4146-8579-60E38D765425
#+BEGIN_SRC sh
defaults write 'com.apple.menuextra.clock' DateFormat -string "EEE MMM d  HH:mm"
#+END_SRC

Prevent Time Machine from prompting to use new hard drives as backup volume.
#+NAME: B7665462-71BC-4929-86C9-4766C3BAA9DB
#+BEGIN_SRC sh
defaults write 'com.apple.TimeMachine' DoNotOfferNewDisksForBackup -bool true
#+END_SRC

Avoid creating .DS_Store files on network volumes.
#+NAME: EE3BD935-46A0-425C-9DAB-0CB341D5E501
#+BEGIN_SRC sh
defaults write 'com.apple.desktopservices' DSDontWriteNetworkStores -bool true
#+END_SRC

Save to disk (not to iCloud) by default.
#+NAME: 526B969F-94AD-441B-8F5D-52141EDA0507
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' NSDocumentSaveNewDocumentsToCloud -bool false
#+END_SRC

Increase window resize speed for Cocoa applications.
#+NAME: 16416BAF-CFEE-43E2-9B6B-C2B85C73D627
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' NSWindowResizeTime -float 0.001
#+END_SRC

Use the Graphite theme.
#+NAME: 8D12169D-8717-46D4-920E-D4C322C4458E
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' AppleAquaColorVariant -int 6
#+END_SRC

Use dark menu bar and Dock
#+NAME: 337E87AE-39CC-41F5-B115-11B994E125B5
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' AppleInterfaceStyle -string Dark
#+END_SRC

Disable the “Are you sure you want to open this application?” dialog.
#+NAME: F89AEE9E-D5D6-4EF9-9914-CE2C3AE53B9B
#+BEGIN_SRC sh
defaults write com.apple.LaunchServices LSQuarantine -bool false
#+END_SRC

Display ASCII control characters using caret notation in standard text views.
Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`.
#+NAME: A2CDF5C4-9239-47AD-9978-09582362316C
#+BEGIN_SRC sh
defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true
#+END_SRC

Disable automatic termination of inactive apps.
#+NAME: 4FDA48E0-AC9B-48B9-A09D-E54F72787F64
#+BEGIN_SRC sh
defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true
#+END_SRC

Disable the crash reporter.
#+NAME: E102244A-C691-4E62-BE68-3BF1EB8D340F
#+BEGIN_SRC sh
defaults write com.apple.CrashReporter DialogType -string "none"
#+END_SRC

Set Help Viewer windows to non-floating mode.
#+NAME: FC22C88E-44B4-4C50-B00A-82DB0DCDB519
#+BEGIN_SRC sh
defaults write com.apple.helpviewer DevMode -bool true
#+END_SRC

Restart automatically if the computer freezes.
#+NAME: F3347821-BEB6-4D91-8ADC-D968F825D491
#+BEGIN_SRC sh
sudo systemsetup -setrestartfreeze on
#+END_SRC

Check for software updates daily, not just once per week.
#+NAME: B0166A42-EB93-444D-ACDA-A0E2AED02543
#+BEGIN_SRC sh
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1
#+END_SRC

Disable Notification Center and remove the menu bar icon.
#+NAME: 493ABAF1-8385-4ADF-90C3-B61699A5603B
#+BEGIN_SRC sh
launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null
#+END_SRC

Disable smart quotes as they’re annoying when typing code.
#+NAME: 1450BB2D-B822-48D3-ADC8-46FFF00B730C
#+BEGIN_SRC sh
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
#+END_SRC

Disable smart dashes as they’re annoying when typing code.
#+NAME: B829AB6A-309B-406F-A51F-2CF38C183210
#+BEGIN_SRC sh
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false
#+END_SRC

****** Hardware
:PROPERTIES:
:ID:       F6533ADA-A21F-49E7-8DD7-4447CF69A528
:END:

Disable press-and-hold for keys in favor of key repeat.
#+NAME: 9078E7EB-65AE-4B8E-978A-E6687DB2C4EA
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' ApplePressAndHoldEnabled -bool false
#+END_SRC

Use all F1, F2, etc. keys as standard function keys.
#+NAME: 662F5288-F102-4FCA-B052-31933DFEFC0B
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' com.apple.keyboard.fnState -bool true
#+END_SRC

Increase sound quality for Bluetooth headphones/headsets.
#+NAME: 03E4D631-C6E3-4E4E-BCE9-BDB87D8549FD
#+BEGIN_SRC sh
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40
#+END_SRC

****** Dock
:PROPERTIES:
:ID:       B3122846-4906-4F7C-AD02-63A84B47A92D
:END:

Automatically hide and show the dock.
#+NAME: 44629106-AB81-4099-AAAE-2A1692110652
#+BEGIN_SRC sh
defaults write com.apple.dock autohide -bool true && killall Dock
#+END_SRC

Do not animate opening applications from the Dock.
#+NAME: 3A5370F0-1F37-47A9-8AD2-5A54F7BEBAF6
#+BEGIN_SRC sh
defaults write com.apple.dock launchanim -bool false && killall Dock
#+END_SRC

Enable highlight hover effect for the grid view of a stack.
#+NAME: 2D1566D0-5912-4770-A53E-DAB815E886F1
#+BEGIN_SRC sh
defaults write com.apple.dock mouse-over-hilte-stack -bool true && killall Dock
#+END_SRC

Make Dock icons of hidden applications translucent.
#+NAME: 95CAD941-7BDA-4D4E-BF2E-976D9D07DA37
#+BEGIN_SRC sh
defaults write com.apple.dock showhidden -bool true && killall Dock
#+END_SRC

Minimize to application.
#+NAME: 6AB142A8-9150-4B3B-8709-237D468212E0
#+BEGIN_SRC sh
defaults write com.apple.dock minimize-to-application -bool true && killall Dock
#+END_SRC

Move the Dock to the left side of the screen.
#+NAME: 7CF0E408-7318-4921-B8BE-F834C8A63BC7
#+BEGIN_SRC sh
defaults write com.apple.dock orientation -string left && killall Dock
#+END_SRC

Remove the animation when hiding/showing the dock.
#+NAME: 2250EED5-046B-4F55-B64E-04787C078F5B
#+BEGIN_SRC sh
defaults write com.apple.Dock autohide-time-modifier -float 0 && killall Dock
#+END_SRC

Remove the auto-hiding Dock delay".
#+NAME: CA55EDF7-AB57-450A-A80A-D9BCE9219951
#+BEGIN_SRC sh
defaults write com.apple.Dock autohide-delay -float 0 && killall Dock
#+END_SRC

Set the icon size of Dock items to 50 pixels.
#+NAME: C92642D8-BA50-46E4-B9D0-A0A7DEEAF0B9
#+BEGIN_SRC sh
defaults write com.apple.Dock tilesize -int 50 && killall Dock
#+END_SRC

Show indicator lights for open applications in the Dock.
#+NAME: D643A6DB-461A-425D-9516-C841B0A4C9E0
#+BEGIN_SRC sh
defaults write com.apple.Dock show-process-indicators -bool true && killall Dock
#+END_SRC

Wipe all (default) app icons from Dock.
#+NAME: 88023507-0070-4713-9F0D-36344D3FDED0
#+BEGIN_SRC sh
defaults write 'com.apple.dock' persistent-apps -array '' && killall Dock
#+END_SRC

Speed up Mission Control animations.
#+NAME: 2AEA50FA-CA94-438A-B82E-3B465CAA2E12
#+BEGIN_SRC sh
defaults write 'com.apple.dock' expose-animation-duration -float 0.1 && killall Dock
#+END_SRC

****** Finder
:PROPERTIES:
:ID:       E7984F15-4360-4F00-B754-CC00FC4D4124
:END:

Allow text selection in Quick Look.
#+NAME: A6759B25-1B21-40C2-A75C-B2DF18A3CAC1
#+BEGIN_SRC sh
defaults write 'com.apple.finder' QLEnableTextSelection -bool true && killall Finder
#+END_SRC

Automatically open a new Finder window when a volume is mounted.
#+NAME: DCDE10BB-3848-4C70-9B7A-8F5641950CCB
#+BEGIN_SRC sh
defaults write 'com.apple.frameworks.diskimages' auto-open-ro-root -bool true && killall Finder
defaults write 'com.apple.frameworks.diskimages' auto-open-rw-root -bool true && killall Finder
defaults write 'com.apple.finder' OpenWindowForNewRemovableDisk -bool true && killall Finder
#+END_SRC

Disable the warning before emptying the Trash.
#+NAME: 4647036E-8DB1-4119-B6D1-2028941B9A91
#+BEGIN_SRC sh
defaults write 'com.apple.finder' WarnOnEmptyTrash -bool false && killall Finder
#+END_SRC

Disable the warning when changing a file extension.
#+NAME: 00CEF20F-FDD2-464F-B8E4-968682A62B26
#+BEGIN_SRC sh
defaults write 'com.apple.finder' FXEnableExtensionChangeWarning -bool false && killall Finder
#+END_SRC

Set finder to display full path in title bar.
#+NAME: 1C946EE8-4D17-4D03-BF58-F2C5C1280739
#+BEGIN_SRC sh
defaults write 'com.apple.finder' _FXShowPosixPathInTitle -bool true && killall Finder
#+END_SRC

New Finder window shows the homefolder.
#+NAME: 85E615B8-24C6-4819-B437-BB1ED2384E82
#+BEGIN_SRC sh
defaults write 'com.apple.finder' NewWindowTarget -string PfHm && killall Finder
#+END_SRC

When performing a search, search the current folder by default.
#+NAME: FB3EFB97-6BEC-4BE4-B8D5-8EACD289CE66
#+BEGIN_SRC sh
defaults write 'com.apple.finder' FXDefaultSearchScope -string SCcf && killall Finder
#+END_SRC

Show all files in Finder.
#+NAME: 5F5E19CE-ECA4-4633-8C67-299C2237C7E2
#+BEGIN_SRC sh
defaults write 'com.apple.finder' AppleShowAllFiles -bool true && killall Finder
#+END_SRC

Show file extensions in Finder.
#+NAME: 7C10B346-5B87-456F-B424-1ED79C2ADE2B
#+BEGIN_SRC sh
defaults write 'com.apple.finder' AppleShowAllExtensions -bool true && killall Finder
#+END_SRC

Show path bar in Finder.
#+NAME: 69400DBC-BA03-4CB4-B724-BA22C070CB2B
#+BEGIN_SRC sh
defaults write 'com.apple.finder' ShowPathbar -bool true && killall Finder
#+END_SRC

Show status bar in Finder.
#+NAME: 6D032485-D6D0-47A4-9B14-06FE6FC0CB80
#+BEGIN_SRC sh
defaults write 'com.apple.finder' ShowStatusBar -bool true && killall Finder
#+END_SRC

Sidebar icon size Small.
#+NAME: 38B74BA0-FFCD-4E46-A1F0-BA839DF631DB
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' NSTableViewDefaultSizeMode -bool true && killall Finder
#+END_SRC

- Finder view style settings [[icnv: Icon View
Nlsv: List View
clmv: Column View
Flwv: Cover Flow View][Via]]
  - icnv :: Icon View
  - Nlsv :: List View
  - clmv :: Column View
  - Flwv :: Cover Flow View
#+NAME: 17D25945-67E7-4F54-9DAA-C23FD89A2758
#+BEGIN_SRC sh
defaults write 'com.apple.Finder' FXPreferredViewStyle Nlsv && killall Finder
#+END_SRC

[[https://gist.github.com/nickbudi/11277384][Via:]]
Set item arrangement to none (enables folder dropdowns, 'Name' if you want to
remove them)
#+NAME: 49C95048-C7D9-4E7C-BAAE-5D78181FF112
#+BEGIN_SRC sh
defaults write com.apple.finder FXPreferredGroupBy -string "None"
#+END_SRC

Sort list view by kind in ascending order (Windows style).
#+NAME: C3E4AFE6-5FB1-4432-B53C-933D83B3BA48
#+BEGIN_SRC sh
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:ExtendedListViewSettings:sortColumn kind" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:ExtendedListViewSettings:columns:4:ascending true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:ListViewSettings:sortColumn kind" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:ListViewSettings:columns:kind:ascending true" ~/Library/Preferences/com.apple.finder.plist
#+END_SRC

Finder: disable window animations and Get Info animations.
#+NAME: AF8A02A4-CFFC-4740-A6E9-3341F912906A
#+BEGIN_SRC sh
defaults write com.apple.finder DisableAllAnimations -bool true
#+END_SRC

Show nothing on the desktop.
#+NAME: 5F9ED39D-B319-46AE-B64F-F8CCE66C14CB
#+BEGIN_SRC sh
defaults write com.apple.finder CreateDesktop -bool false
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false
#+END_SRC

****** Screen
:PROPERTIES:
:ID:       76D10582-3909-4CBB-9770-DF3D4F7C9DB0
:END:

Require password immediately after sleep or screen saver begins.
#+NAME: A73210E6-B619-4523-BD19-A5F8951E8495
#+BEGIN_SRC sh
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0
#+END_SRC

Disable shadow in screenshots.
#+NAME: E99413DF-0D11-4824-873D-3514F9333D6E
#+BEGIN_SRC sh
defaults write com.apple.screencapture disable-shadow -bool true
#+END_SRC

Save screenshots in PNG format.
#+NAME: EE876749-BDB9-466F-A0FC-567EBBF9C5C2
#+BEGIN_SRC sh
defaults write 'com.apple.screencapture' type -string png && killall SystemUIServer
#+END_SRC

Enable subpixel font rendering on non-Apple LCDs.
#+NAME: 66472988-E3AE-44D0-9423-17E9FEA0F5F1
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' AppleFontSmoothing -int 2
#+END_SRC

[[https://github.com/robb/.dotfiles/blob/master/osx/defaults.install][Via]]
#+NAME: 598BE517-CC5C-4D99-AD0B-41D2D906E376
#+BEGIN_SRC sh
mkdir -p ~/Screen\ Shots
defaults write com.apple.screencapture location ~/Screen\ Shots
#+END_SRC

****** Hotcorners
:PROPERTIES:
:ID:       14E7437D-7BE9-4149-818B-ADC7B145A822
:END:

- Possible values:
  - 0 :: no-op
  - 2 :: Mission Control
  - 3 :: Show application windows
  - 4 :: Desktop
  - 5 :: Start screen saver
  - 6 :: Disable screen saver
  - 7 :: Dashboard
  - 10 :: Put display to sleep
  - 11 :: Launchpad
  - 12 :: Notification Center

Top left screen corner \rarr Desktop.

#+NAME: 446CE2EF-BCBE-4D83-9ACC-2A1E2F91C64B
#+BEGIN_SRC sh
defaults write com.apple.dock wvous-tl-corner -int 4
defaults write com.apple.dock wvous-tl-modifier -int 0
#+END_SRC

Top right screen corner \rarr Mission Control.

#+NAME: FF4E8A69-A137-4E50-A4E4-59DA58A082B5
#+BEGIN_SRC sh
write defaults com.apple.dock wvous-tr-corner -int 2
defaults write com.apple.dock wvous-tr-modifier -int 0
#+END_SRC

Bottom left screen corner \rarr Application window.

#+NAME: 7C9DE1C5-BBF8-4D40-8FAC-E78D5B85231E
#+BEGIN_SRC sh
defaults write com.apple.dock wvous-bl-corner -int 3
defaults write com.apple.dock wvous-bl-modifier -int 0
#+END_SRC

Bottom right screen corner \rarr Nothing.

#+NAME: 6A561511-8354-408E-8805-201BAAE80A04
#+BEGIN_SRC sh
defaults write com.apple.dock wvous-br-corner -int 0
defaults write com.apple.dock wvous-br-modifier -int 0
#+END_SRC

****** Spaces
:PROPERTIES:
:ID:       A76717BD-1BF0-48D3-8E69-3A03BFE2B4A2
:END:

#+NAME: 77191228-16CC-4B95-A030-A5C2DF90CD50
#+BEGIN_SRC sh
# Don’t automatically rearrange Spaces based on most recent use
defaults write com.apple.dock mru-spaces -bool false
# Set edge-dragging delay to 0.7
defaults write com.apple.dock workspaces-edge-delay -float 1.0
#+END_SRC

****** Mouse
:PROPERTIES:
:ID:       319EDC92-B863-4D2E-A951-8479F9171FFF
:END:

Reasonably fast.
#+NAME: 9B804905-E9D0-43BE-8106-DC53009C58C4
#+BEGIN_SRC sh
defaults write 'NSGlobalDomain' com.apple.mouse.scaling -float 2
#+END_SRC

****** Terminal
:PROPERTIES:
:ID:       20C7C795-5C0A-442A-9D0F-669D1637A1D2
:END:

Only use UTF-8 in Terminal.app.

#+NAME: 9AF4BB62-76D4-4943-88FC-704A7BA492AC
#+BEGIN_SRC sh
defaults write com.apple.terminal StringEncodings -array 4
#+END_SRC

****** Activity Monitor
:PROPERTIES:
:ID:       D36D6B69-54DC-4666-AB48-731A2FA7130F
:END:

Show the main window when launching Activity Monitor.
#+NAME: BC6F1328-5EA2-4B1D-AC72-654D829BDB31
#+BEGIN_SRC sh :results output silent
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true
#+END_SRC

Visualize CPU usage in the Activity Monitor Dock icon.
#+NAME: 81FD865B-E76D-4873-8C12-42C6194AB300
#+BEGIN_SRC sh :results output silent
defaults write com.apple.ActivityMonitor IconType -int 5
#+END_SRC

Show all processes in Activity Monitor.
#+NAME: F02FC4BB-0B04-4B8A-965C-71B181139FC8
#+BEGIN_SRC sh :results output silent
defaults write com.apple.ActivityMonitor ShowCategory -int 0
#+END_SRC

Sort Activity Monitor results by CPU usageefaults write com.apple.ActivityMonitor Sort.Column -string "CPUUsage".
#+NAME: C2C6F54C-D4B7-4CBE-AF80-E45CE40C9A54
#+BEGIN_SRC sh :results output silent
defaults write com.apple.ActivityMonitor SortDirection -int 0
#+END_SRC

****** Complete
:PROPERTIES:
:ID:       orgmode:gcr:vela:7EF2FF7F-24E1-465A-9AB2-B80CFEB93A56
:END:

#+NAME: orgmode:gcr:vela:55999A59-D51C-48A3-A459-30E0951FB3E6
#+BEGIN_SRC sh
echo "Script complete"
echo "Log out then back in to see changes "
#+END_SRC

*** Administration
:PROPERTIES:
:ID:       539CAD89-6A07-404F-8AE6-D69B99C055FF
:END:
**** Install
:PROPERTIES:
:header-args: :tangle "03_administration.sh" :tangle-mode (identity #o755)
:ID:       E0655C3B-2CEB-446E-BB5E-9A85CA4F8FF2
:END:
****** Brew & Brew Cask
:PROPERTIES:
:ID:       3CD7F53A-C7B3-4C54-9E43-7B43E1D2E54F
:END:

Brew is [[http://brew.sh/][here]].

#+NAME: DB082535-A43F-46EA-9F1B-1BB6302CA396
#+BEGIN_SRC sh
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
#+END_SRC

BrewCask is [[http://caskroom.io][here]].

#+NAME: 5C68042B-9C59-42C9-9A7F-D625C0475C3A
#+BEGIN_SRC sh
brew tap caskroom/cask
#+END_SRC

****** Git Checkout Directory
:PROPERTIES:
:ID:       1BCF52F0-EA8B-4A56-9246-8DFF5131A5ED
:END:

Prepare the anonymous GitHub directory.

#+NAME: 92F77AD1-E9DC-4740-B3A3-C6A3A4034068
#+BEGIN_SRC sh
rm -rf ~/git/github-anonymous
mkdir -p ~/git/github-anonymous
cd ~/git/github-anonymous
#+END_SRC

****** Bash Configuration
:PROPERTIES:
:ID:       56989957-A8F5-4C47-9B27-31A3AC4ED8DD
:END:

Set up Bash. Make everything expected available.

#+NAME: D94BB210-9FCF-4A63-825A-9353E2709654
#+BEGIN_SRC sh
git clone https://github.com/grettke/bash.git
cd bash
./deploy
cd
#+END_SRC

****** Bash Software
:PROPERTIES:
:ID:       223C4BB3-2F4D-418C-93B4-8AFF0801BD43
:END:

[[http://clubmate.fi/upgrade-to-bash-4-in-mac-os-x/][Via]].

#+NAME: ADE3737D-A638-4BBD-9DD5-C42681EA1C0D
#+BEGIN_SRC sh
echo $BASH_VERSION
brew install bash
if grep "/usr/local/bin/bash" /etc/shells > /dev/null; then
    echo "brew bash already configured in shells; doing nothing"
else
    sudo bash -c 'echo /usr/local/bin/bash >> /etc/shells'
    chsh -s /usr/local/bin/bash
fi
echo $BASH_VERSION
#+END_SRC

****** Fonts
:PROPERTIES:
:ID:       03993E03-45DF-498A-B197-283C61313E39
:END:

#+NAME: DD72394C-9D37-446C-A704-E88BE2B0CEED
#+BEGIN_SRC sh
brew tap caskroom/fonts
#+END_SRC

Install them automatically.

#+NAME: 74BEB31B-9499-4144-B997-9E16B3FA24D9
#+BEGIN_SRC sh
brew cask install font-dejavu-sans
brew cask install font-quivira
brew cask install font-noto-sans
brew cask install font-noto-sans-symbols
brew cask install font-symbola
brew cask install font-fontawesome
brew cask install font-montserrat
#+END_SRC

****** Terminal
:PROPERTIES:
:ID:       4A37A9A3-A9D6-4ECD-AB89-EB0FE9815091
:END:

#+NAME: 429CCB8C-CFCF-40C9-87B5-03384D5DFE14
#+BEGIN_SRC sh
rm -rf ~/git/github-anonymous/osx-terminal.app-colors-solarized
cd ~/git/github-anonymous
git clone https://github.com/tomislav/osx-terminal.app-colors-solarized.git
#+END_SRC

****** Fortune
:PROPERTIES:
:ID:       CFE4D4B5-0B4E-434A-83DA-7AF5CBBDD5BD
:END:
#+NAME: 716756F8-6497-4367-9330-9A578AC31AA6
#+BEGIN_SRC sh
brew install fortune
#+END_SRC
****** Recipes
:PROPERTIES:
:ID:       54BA64D3-899B-4AA4-A68F-237F68B0CF2F
:END:

You will want to know details about the software you are installing. Details
include version number, dependencies, and post-installation requirements.
Sometimes the recipes install old versions of the software and need to be
updated. Sometimes recipes don't link the software and you need to do it
manually. When you want details, you will have easy access to them that neither
the Github GUI or the Brew Cask GUI easily provide.

#+NAME: A61A74A8-B361-4395-B9DE-E6F843166511
#+BEGIN_SRC sh
cd ~/git/github-anonymous
git clone https://github.com/Homebrew/homebrew.git
git clone https://github.com/caskroom/homebrew-cask.git
#+END_SRC
****** Complete
:PROPERTIES:
:ID:       orgmode:gcr:vela:DE760FA6-E465-4EFA-BB8F-A46D459A9F44
:END:

#+NAME: orgmode:gcr:vela:E4D94581-BF48-4D98-BAB4-74BEEBA09F4A
#+BEGIN_SRC sh
echo "Script complete"
#+END_SRC

**** Configure
:PROPERTIES:
:header-args: :tangle "04_administration.org"
:ID:       B7B4F0A4-C676-4B79-828F-837B3DAE851E
:END:

#+NAME: D880F24A-DE8D-4513-A354-45C9B57E0631
#+BEGIN_SRC org
,* Terminal

- Profiles
  - Import the Solarized dark theme
  - Set it to the default theme
  - Set the font to DJSM 17
- Profiles \rarr Advanced
  - NO Set locale environment variables on startup
    - Set them in your =bashrc=, not here
#+END_SRC

*** Usability
:PROPERTIES:
:ID:       83A1561E-B613-4ED3-96AD-93B47F001C26
:END:
**** Install
:PROPERTIES:
:header-args: :tangle "05_usability.sh" :tangle-mode (identity #o755)
:ID:       66C750A9-6702-43CA-86A2-A033B47B0138
:END:
***** PopChar
:PROPERTIES:
:ID:       7EEB45C3-B585-421A-A710-43B85143BC75
:END:
:LOGBOOK:
- Refiled on [2016-12-13 Tue 21:04] \\
  Correct placement
:END:

#+NAME: A02C8B94-4717-42AA-8676-36D13B168BB6
#+BEGIN_SRC sh
brew cask install popchar
#+END_SRC

***** karabiner
:PROPERTIES:
:ID:       EE4E6BA8-4BB5-4ACD-9657-36C776448CE4
:END:

#+NAME: F1B1D8B4-662F-4DD2-8C02-CE51CFF862E0
#+BEGIN_SRC sh
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
    brew cask install karabiner
else
    echo "karabiner: Only install on hosts"
fi
#+END_SRC

***** Spectacle
:PROPERTIES:
:ID:       1553426A-6A83-4104-AAA8-6DEF05FBBBC4
:END:

#+NAME: 944FB8AE-DD79-49C6-8ABC-878A782234BE
#+BEGIN_SRC sh
brew cask install spectacle
#+END_SRC

***** Little Snitch
:PROPERTIES:
:ID:       5D68F827-7AEA-4C40-A2FF-41ABDAAA53A9
:END:
#+NAME: 0A6CDD3C-BB1F-4AB1-8523-C4F5383A6856
#+BEGIN_SRC sh
brew cask install little-snitch
#+END_SRC

***** Bartender
:PROPERTIES:
:ID:       119F1391-9A8A-49F6-810E-E2620F5AF15F
:END:

#+NAME: 1483E8B6-098B-4793-91BD-F5081B2F76ED
#+begin_src sh
brew cask install bartender
#+end_src

***** flux
:PROPERTIES:
:ID:       F0BE2195-81FE-42F7-92F2-7AEB6A834041
:END:

#+NAME: 17B2744A-477B-4E79-A152-D1D43E8FB030
#+BEGIN_SRC sh
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
    brew cask install flux
else
    echo "flux: Only install on hosts"
fi
#+END_SRC

***** xquartz
:PROPERTIES:
:ID:       51C9B39A-45E3-4BD6-ADD1-C0A2B5B3A8C1
:END:
#+NAME: 442A6B4B-C210-4436-B0AE-F571D3F75B01
#+BEGIN_SRC sh
brew cask install xquartz
defaults write org.macosforge.xquartz.X11 dpi -int 170
#+END_SRC
***** Tuxera NTFS
:PROPERTIES:
:ID:       18B65FB4-8884-4920-9A54-4A4CECBFED3F
:END:

#+NAME: F09F391E-0A25-4B8D-B70F-6FD35A103D95
#+BEGIN_SRC sh
brew cask install tuxera-ntfs
#+END_SRC

***** SwitchResX
:PROPERTIES:
:ID:       12A91877-4049-4C92-8430-71DEA1B5B66F
:END:

#+NAME: A503FA0B-E147-40BC-BD01-E2EF3E09E259
#+BEGIN_SRC sh
brew cask install switchresx
#+END_SRC

***** Completion
:PROPERTIES:
:ID:       orgmode:gcr:vela:DA72CD21-2696-4266-852B-97239509EB22
:END:

#+NAME: orgmode:gcr:vela:C502206C-3635-4DC4-A937-00A9A2EABDC1
#+BEGIN_SRC sh
echo "Script is done"
#+END_SRC

**** Configure
:PROPERTIES:
:header-args: :tangle "06_usability.org"
:ID:       37C51946-B8BE-41B4-BEA6-7DBA95E1955F
:END:

#+NAME: 3A1E7B61-A44D-4C11-9338-979D7BB7B05B
#+BEGIN_SRC org
,* PopChar

- Register it
- Preferences
  - Activation
    - Location: Status item
    - Close window then
      - After selecting a char: No
      - When mouse leaves window: No
      - When clicking outside window: No

,* Karabiner

- Run it. Approve it. Configure it with the following. Look for the
  heading with the name below following "Modify".
- Check:
  - Return to Option_L
    (+ When you type Return only, send Return)
- Under MenuBar
  - YES Show icon in menubar
    - YES Show settings name in menu bar
  - SettingsList
    - Create a new one named "Nothing"
      - This is for "turning Karabiner off"

,* Spectacle

- Start it
- Enable integration
- Start at boot

,* Little Snitch

- Run the installer
- Start it
- Register it
- Configure per below
- Enable integration
- Start at boot

Granting:

- *Always grant minimum required*
- For known good TLD's, grant it forever
  - Lots of connections to *.apple.com
  - For apps that want to call homen do forever

- Gen
  - Show inactive warning
  - Silent mode: no
  - Show status in menu bar.
- Alert:
  - Detail level: Show full details
  - Yes: Confirm automatically
  - NO: Confirm with return and escape.
    - Can use control-return and command-return intead
- Monitor:
  - Keyboard shortcut: Off
  - Show network activity in menu bar.
    - Show data rates numerically. Monochrome.
  - Show auto when mouse enters. Hide in 2s.
- APS
  - Yes: Enable automatic profile switching
    - When joining: Ask
  - Yes: Save geolocation of networks.
- Security
  - Allow rules and profile edit.
  - Allow profile switch.
  - Allow preference editing
  - Respect privacy.
- Advanced
  - Approve rules automatically.
- Update
  - Automatically check for updates daily

,* Bartender

- License it
- GENERAL
  - Launch Bartender at login: yes.
  - At bartender launch: show bartender bar: NO.
  - Bartender bar: autohides, YES.
- Appearance
  - Menu bar icon: "..."
  - Show when bartender bar is open: YES.

- Never hide
  - Volume
  - Clock
  - Little Snitch
  - Bluetooth
  - Wifi
  - SwitchResX
  - Webcam Settings
  - Screenflow
- Hide everything else

,* flux

- NA

- Enable at startup

,* Tuxera NTFS

- Install it
  - brew only downloads the installer
- License it

,* SwitchResX

- License it
- General Settings
  - Key shortcut
    - Open: Command-F10
  - Startup Settings
    - [X] Launch SwitchResX Daemon automatically after login

,* XQuartz

- Log out and back in again

,* Inkscape

- [[https://inkscape.org/en/download/mac-os/][Follow directions]]
#+END_SRC

*** Utility
:PROPERTIES:
:ID:       C1DA9537-9D9B-493B-9318-4ABEEAFEA86B
:END:
**** Install
:PROPERTIES:
:header-args: :tangle "07_utility.sh" :tangle-mode (identity #o755)
:ID:       F2B0FCF0-1F56-4D3B-AC9F-10F4E430BBE2
:END:
***** Java
:PROPERTIES:
:ID:       7E76DE2C-7836-44B0-8636-90BB876A5E33
:END:
#+NAME: 274A6FA4-B619-422A-8546-C1DCE6C47B63
#+BEGIN_SRC sh
brew cask install java
#+END_SRC
***** ditaa
:PROPERTIES:
:ID:       9854EF35-CB8E-4DBA-99E9-E41B9E5947C9
:END:

#+NAME: D45705FA-D7E0-4048-BD96-50F108F22B89
#+BEGIN_SRC sh
brew install ditaa
#+END_SRC

***** plantuml
:PROPERTIES:
:ID:       0EB0DB85-1BCF-46AB-AF56-0653A41ABF82
:END:

#+NAME: 35B5E4A8-9DB8-4D43-B959-4C3CB117E77E
#+BEGIN_SRC sh
brew install plantuml
#+END_SRC

***** languagetool
:PROPERTIES:
:ID:       860B895C-E8C7-436E-BE3A-23F6B4605211
:END:

#+NAME: 18A8DAE7-ED24-42EA-B123-7313C85CB632
#+BEGIN_SRC sh
brew install languagetool
#+END_SRC
***** aspell
:PROPERTIES:
:ID:       EA68D5E2-13DC-4B3D-B01C-DB023A989199
:END:
#+NAME: 2A0B2675-CF9D-4C1C-9A68-1AB58777BFED
#+BEGIN_SRC sh
brew install aspell -all
#+END_SRC
***** graphviz
:PROPERTIES:
:ID:       1CB4FAE9-39E8-4818-90D5-3AE372CD3BB8
:END:
#+NAME: E7F21135-BF9B-4645-9EF8-7F1F4A1C240A
#+BEGIN_SRC sh
brew install graphviz
#+END_SRC
***** pandoc
:PROPERTIES:
:ID:       48D995F7-2EAC-49AC-ABC1-18A18A237901
:END:
#+NAME: CA898FBA-220E-4B52-8E1E-8857131AA6D8
#+BEGIN_SRC sh
brew install pandoc
#+END_SRC
***** Marked 2
:PROPERTIES:
:ID:       844E1D37-0246-4C05-A52F-DE69DBB9B8BD
:END:

#+NAME: 8BDE1375-27EE-4D93-BE7A-EC3CB66A7A96
#+BEGIN_SRC sh
brew cask install marked
#+END_SRC
***** ImageMagic
:PROPERTIES:
:ID:       CBBBABD0-B049-4669-B113-4417A04DD613
:END:
#+NAME: 11D7F839-3D03-4622-832E-5AE11874BFD6
#+BEGIN_SRC sh
brew install imagemagick --with-fftw --with-fontconfig --with-webp --with-x11
#+END_SRC
***** povray
:PROPERTIES:
:ID:       196A365A-802C-48F4-B35D-02958CF95E78
:END:
#+NAME: F62C5E92-3FCE-4CC4-A24A-4BA3275549A1
#+BEGIN_SRC sh
brew install povray --with-openexr
#+END_SRC
***** growlnotify
:PROPERTIES:
:ID:       9367E78C-5F6F-44A2-A370-CD0AF9D41F40
:END:

#+NAME: 9CEA3938-9181-4F29-95F0-6AA764D159CB
#+BEGIN_SRC sh
brew cask install growlnotify
#+END_SRC

***** xmllint
:PROPERTIES:
:ID:       55AFF634-C899-4667-BC25-47F9099DFF9A
:END:

#+NAME: C8F78DA0-A4AF-4F54-AF2F-B739C06F7F31
#+BEGIN_SRC sh
brew install libxml2
#+END_SRC
***** dos2unix
:PROPERTIES:
:ID:       59D47685-D541-4D78-88BF-F3313FE7DF10
:END:

#+NAME: 950BBA8F-2D33-445E-AE8B-E0067859B675
#+BEGIN_SRC sh
brew install dos2unix
#+END_SRC

Sometimes installation [[https://github.com/Homebrew/homebrew/issues/33622][fails]] with the error.

#+BEGIN_EXAMPLE
gcr@vela:.../man/de/man1⮞ brew link dos2unix
Linking /usr/local/Cellar/dos2unix/7.3.2...
Error: Could not symlink share/man/de/man1/dos2unix.1
/usr/local/share/man/de/man1 is not writable.
#+END_EXAMPLE

The solution is.

#+BEGIN_EXAMPLE
chown -R `whoami` /usr/local/share/man/de/man1
#+END_EXAMPLE

***** ccrypt
:PROPERTIES:
:ID:       F9E3F2A3-F16A-4EB8-8F4F-4FF47C7BBE06
:END:

#+NAME: 9FBFA1B1-9677-4366-BF34-9A5D33A5677C
#+BEGIN_SRC sh
brew install ccrypt
#+END_SRC

***** tree
:PROPERTIES:
:ID:       8A7F33C7-CF3D-4E64-A63E-2AECD13FFD5F
:END:
#+NAME: 91E886FD-0DFA-475D-B85C-B7DD07BDFB1B
#+BEGIN_SRC sh
brew install tree
#+END_SRC

***** archey
:PROPERTIES:
:ID:       AAF25357-3F8F-4A19-902D-D494D4D7FE38
:END:

#+NAME: 900B81AC-3E1F-411F-9B11-9D23B958296E
#+BEGIN_SRC sh
brew install archey
#+END_SRC

***** figlet
:PROPERTIES:
:ID:       ADF24324-CF88-44E0-BE77-DC65DF37502E
:END:

#+NAME: 5667DE11-E68E-4558-A765-256D23A65B14
#+BEGIN_SRC sh
brew install figlet
#+END_SRC

***** Freemind
:PROPERTIES:
:ID:       A867B6FD-CD3A-4D5F-9EAF-26E96D31D760
:END:

#+NAME: C03CD9F2-0630-4E70-A20D-3D43931CE8FA
#+BEGIN_SRC sh
brew cask install freemind
#+END_SRC

***** Completion
:PROPERTIES:
:ID:       orgmode:gcr:vela:C05687DA-1016-4329-A85D-A128773A867E
:END:

#+NAME: orgmode:gcr:vela:1402AA08-B373-4B34-BD11-C608177CE9F8
#+BEGIN_SRC sh
echo "Script is done"
#+END_SRC

**** Configure
:PROPERTIES:
:header-args: :tangle "08_utility.org"
:ID:       D49412F1-54B0-4551-A449-6D353D1F973D
:END:

#+NAME: 465FEE16-2EC6-475F-B2C4-C68E9E10E45F
#+BEGIN_SRC org
,* Marked 2

- License it
- Chose "Code" profile which chooses
  - Default style: Github
  - Processor: Discount (GFM)
  - Syntax Highlight Style: Github
  - Enabled
    - Syntax Highlighting
    - GitHub Checkboxes
    - MathJaxq
- Preferences
  - General
    - NO Show Style Picker
    - NO Show word count
  - Preview
    - YES Enable Mini Map navigation
    - YES Show scroll progress indicator
    - YES Automatically validate URLs on update
  - Style
    - Default style: GitHub
  - Proofing
    - YES Highlight Markdown syntax errors
#+END_SRC
*** Internet
:PROPERTIES:
:ID:       1EBB115D-FF82-4A21-8EFC-8D8634C0CDEB
:END:
**** Install
:PROPERTIES:
:header-args: :tangle "09_internet.sh" :tangle-mode (identity #o755)
:ID:       138B24D9-2E1B-4D95-B068-BFBE2275755D
:END:
***** MPlayer OSX Extended
:PROPERTIES:
:ID:       C47DA927-A6B2-4751-98AC-D3200E6F4095
:END:
#+NAME: 093814E5-DB0A-481C-9B39-ACF62216BB55
#+begin_src sh
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
brew cask install mplayer-osx-extended
else
    echo "mplayer: Only install on hosts"
fi

#+end_src

***** Skype
:PROPERTIES:
:ID:       6003585A-A3B2-453A-B3CF-33240C69BB0E
:END:
Only install it on hosts.

#+NAME: D3411D0C-F38A-409F-8D6C-5A03AFEE9CCF
#+BEGIN_SRC sh
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
    brew cask install skype
else
    echo "skype: Only install on hosts"
fi
#+END_SRC

***** WhatsApp
:PROPERTIES:
:ID:       orgmode:gcr:vela:CEA0BEE8-E951-4304-BDDE-05DBFA39FBAD
:END:

#+NAME: orgmode:gcr:vela:02BF16B3-9FC1-4F9A-AB48-795FB9969E88
#+BEGIN_SRC emacs-lisp
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
    brew cask install whatsapp
else
    echo "whatsapp: Only install on hosts"
fi
#+END_SRC

***** Dropbox
:PROPERTIES:
:ID:       97065F78-F2C3-4189-A24E-BAB474EC2D59
:END:

#+NAME: 3F5B9D5C-F54B-4DE9-A9FC-64D5AFDF2C86
#+BEGIN_SRC sh
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
    brew cask install dropbox
else
    echo "dropbox: Only install on hosts"
fi
#+END_SRC

***** Chrome
:PROPERTIES:
:ID:       27B3E977-821E-4966-B6CA-438212B4CA2A
:END:

#+NAME: 63C6CF90-7C76-4260-A7A5-7786561B2A70
#+begin_src sh
brew cask install google-chrome
#+end_src

***** Firefox
:PROPERTIES:
:ID:       2348C82F-F560-4C30-8B80-9D7EE4D4291F
:END:
#+NAME: 32D109DB-1554-40D5-B591-FCC2F922F903
#+begin_src sh
brew cask install firefox
#+end_src

Sometimes this install fails. I checked the file download. The file exists. The
name hasn't changed. Did a manual install instead.

***** Opera
:PROPERTIES:
:ID:       2348C82F-F560-4C30-8B80-9D7EE4D4291F
:END:
#+NAME: D852AD6F-DF45-4FF9-A391-954323438F96
#+begin_src sh
brew cask install opera
#+end_src

***** Filezilla
   :PROPERTIES:
   :ID:       3F67D0FE-1FE7-4578-9C71-DE4DBD6F75C2
   :END:

#+NAME: E35E5182-A810-4547-B6E8-866CC13AA7FA
#+begin_src sh
brew cask install filezilla
#+end_src

***** Slack
:PROPERTIES:
:ID:       6B546C16-0EBC-4304-82F0-D0ED2D7F0AF9
:END:

#+NAME: 75569C81-CF17-482A-8EF3-53457897457C
#+BEGIN_SRC sh
brew cask install slack
#+END_SRC
***** Kindle
:PROPERTIES:
:ID:       75FEF4AC-89B2-4934-8D71-ECE0420A2189
:END:
#+NAME: B4E47A43-27D2-4478-821A-0E6C6138FB40
#+BEGIN_SRC sh
brew cask install kindle
#+END_SRC
***** wget
:PROPERTIES:
:ID:       C55C637C-818F-40C4-B55A-39641BB1FAD2
:END:

#+NAME: 59E4E9CA-178C-4901-9E02-F5D1CDE00BB4
#+BEGIN_SRC sh
brew install wget
#+END_SRC

***** Screenflow
:PROPERTIES:
:ID:       3D67DF5D-CB4A-4C75-B587-1A5724259216
:END:

#+NAME: 536ADA22-0876-44F9-A76D-57B961A7A8A0
#+BEGIN_SRC sh
brew cask install screenflow
#+END_SRC

***** inkscape
:PROPERTIES:
:ID:       6919160F-2681-4547-AB71-0D8CB19AD43C
:END:

- When I installed it via Brew-Cask the app would not run
  - No errors were reported
- Switched to brew
- Installation notes
  - Lot of C++ stuff
  - Freetype
  - Fontconfig
  - cairo
  - gsl
  - gobject-introspection
  - gtk
  - pango
  - harfbuzz
  - Avoid the builtin
    - get-text
    - icu4c
- Tried to run it
  - Fontconfig error: Cannot load default config file
  - Segmentation fault: 11
  - Set FONTCONFIG_PATH=/opt/X11/lib/X11/fontconfig
  - Tried running inkscape: it ran
- <2016-07-19 Tue 19:01>
  - X version still doesn't work right
  - Switched to Brew Cask
  - Updated xquartz
  - That didn't work, went back to plain brew

#+NAME: 97116D0B-68F4-4E15-B06C-CD9EF99A084A
#+BEGIN_SRC sh
brew install homebrew/gui/inkscape
#+END_SRC

***** gimp
:PROPERTIES:
:ID:       6C070BEE-9228-45F8-8440-F0198D6D6742
:END:

#+NAME: B9005B12-56A9-4AAF-ACF3-725C464B2D96
#+BEGIN_SRC sh
brew cask install gimp
#+END_SRC

***** airy
:PROPERTIES:
:ID:       orgmode:gcr:vela:B0F987C4-55C3-4D8E-8C47-631F26A1F1D2
:END:
#+NAME: orgmode:gcr:vela:860955A6-49A5-46BC-98B6-A7892740C38F
#+BEGIN_SRC sh
brew cask install airy
#+END_SRC
**** Configure
:PROPERTIES:
:header-args: :tangle "10_internet.org"
:ID:       A8BA5927-38E4-4B49-8DDC-92FDD05F468B
:END:

#+NAME: A26787A7-8AB7-4737-AECA-822CE9E99C23
#+BEGIN_SRC org
,* MPlayer OSX Extended

- Run it
- [[http://www.sample-videos.com/][Test it]]
- Volume works?

,* Skype

,*Only install on hosts*

- Log in and disable notifications for log in and out

,* Dropbox

,*Only install on hosts*

- Log in
- Sync nothing right away
- Choose what is critical here
  - Screenshots
  - Everything
- Pause it and copy everything over on a wired network

,* Chrome

- Sign into Chrome
- Let the settings sync
- Log into gmail

,* Firefox

- Install the standard plugins
  - NoScript
- Log into gmail

,* Opera

- Run it
- Log into gmail

,* FileZilla

- Set up Filezilla for WnW

,* Slack

- Join
  - livecodepublic
  - milwaukee

,* Kindle

- Login

,* Screenflow

- Register

,* Airy

- Register
- Configure default download path
#+END_SRC

*** DevOps
:PROPERTIES:
:ID:       203E96B0-926B-4A81-8793-A7B73792E303
:END:
**** Install
:PROPERTIES:
:header-args: :tangle "11_dev-ops.sh" :tangle-mode (identity #o755)
:ID:       0B9DFAC8-45F5-4358-9A7D-C4DAAA3A7A69
:END:
***** Carbon Copy Cloner
:PROPERTIES:
:ID:       F0BE2195-81FE-42F7-92F2-7AEB6A834041
:END:

Only install it on hosts.

#+NAME: orgmode:gcr:vela:5696A7AC-7227-49AA-9DDB-902BC6722018
#+BEGIN_SRC sh
,#+BEGIN_SRC sh
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
    brew cask install carbon-copy-cloner
else
    echo "carbon-copy-cloner: Only install on hosts"
fi

#+END_SRC

***** VMWare Fusion
:PROPERTIES:
:ID:       96ADB3AF-1BDB-4F31-BB31-D5E32221AC8D
:END:

Only install it on hosts.

#+NAME: 2B059288-F12E-48E1-939F-1138117FDE4B
#+BEGIN_SRC sh
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
    brew cask install vmware-fusion
else
    echo "vmware-fusion: Only install on hosts"
fi
#+END_SRC

***** VirtualBox
:PROPERTIES:
:ID:       04B646A2-EFDE-4179-BDA1-A9857F421B0F
:END:

#+NAME: 0B6E9298-89D3-40D5-83F1-9F2DC21590E8
#+BEGIN_SRC sh
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
    brew cask install virtualbox
    brew cask install virtualbox-extension-pack

else
    echo "virtualbox: Only install on hosts"
fi
#+END_SRC
***** Vagrant
    :PROPERTIES:
    :ID:       7B45D9BF-6FD5-4624-9F06-671D33D76A78
    :END:

#+NAME: 165A046E-FFC9-4431-8150-CF9F4890EA24
#+begin_src sh
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
    brew cask install vagrant
else
    echo "vagrant: Only install on hosts"
fi

#+end_src
***** Packer
:PROPERTIES:
:ID:       7C812779-2F0F-4F0A-959E-BF8EEE44C1B3
:END:

#+NAME: 5C1B39F1-FC9C-4992-B891-D6208168D5F1
#+begin_src sh
if [ ! -d "/Library/Application Support/VMware Tools" ]; then
    brew cask install packer
else
    echo "packer: Only install on hosts"
fi

#+end_src

***** iPartition
:PROPERTIES:
:ID:       C311D47F-1D57-47EC-A8AE-36973EB8F33E
:END:

#+NAME: D7F9F051-BE46-4E38-BE35-6E8CE4B5D727
#+BEGIN_SRC sh
brew cask install ipartition
#+END_SRC

**** Configure
:PROPERTIES:
:header-args: :tangle "12_dev-ops.org"
:ID:       3A6DCCFC-D601-4FA1-9013-82BDC97DF8D8
:END:

#+NAME: 089A38CA-43AD-4BE4-8EF4-C77E57CF25F3
#+BEGIN_SRC org
,* Carbon Copy Cloner

,*Only install on hosts*

- Install version 4
- License it

,* VMWare

,*Only install on hosts*

- On a host: License it

,* Vagrant

Install the VMWare provider for Vagrant and then license it.

Remember to [[http://docs.vagrantup.com/v2/other/debugging.html][log]] appropriately.

It goes something like this:

,#+begin_src sh
vagrant plugin install vagrant-vmware-fusion
mkdir ~/.vagrant
cd ~/.vagrant
# copy that license file in there
vagrant plugin license vagrant-vmware-fusion license.lic
cd
rm -rf ~/.vagrant
,#+end_src

Verify the plugin is licensed and happy:

,#+NAME: CCCFA8CD-1754-4BD6-A355-7907E885B6C4
,#+BEGIN_SRC sh
vagrant plugin list
,#+END_SRC

Test out VirtualBox box:

,#+begin_src sh
cd ~/tmp
mkdir vgtest
cd vgtest
vagrant init hashicorp/precise64
vagrant up --provider virtualbox
,#+end_src

The first time I tried this, it failed. I restarted OSX. Then it worked.

Test out VMWare. The default provider is vmware, so don't have to specify
provider.

,#+begin_src sh
cd ~/tmp/vgtest
vagrant up
,#+end_src

,* Packer

- Nothing at this time

,* iPartition

- License it
#+END_SRC
*** Development
:PROPERTIES:
:ID:       C1DA9537-9D9B-493B-9318-4ABEEAFEA86B
:END:
**** Install
:PROPERTIES:
:header-args: :tangle "13_development.sh" :tangle-mode (identity #o755)
:ID:       F2B0FCF0-1F56-4D3B-AC9F-10F4E430BBE2
:END:
***** Deltawalker
:PROPERTIES:
:ID:       D8E6483D-FF38-4A25-BA43-3CA7516B8789
:END:

#+NAME: 82653612-8AFE-4FF7-86D8-921DDA662EB9
#+BEGIN_SRC sh
brew cask install deltawalker
#+END_SRC

***** Python
:PROPERTIES:
:ID:       1BA55F5A-9902-4539-9494-0231C4DBD9B6
:END:

Install Python 2 and virtualenv.

#+NAME: 4128F3DB-7E7C-4885-B54E-AA78423855C5
#+BEGIN_SRC sh
brew install python
brew linkapps python
pip install virtualenv
pip install --upgrade pip setuptools virtualenv
#+END_SRC

****** Proselint
:PROPERTIES:
:ID:       orgmode:gcr:vela:8F8E8E86-F202-434A-BF25-A3160CB4A4CF
:END:

Install proselint.

#+NAME: orgmode:gcr:vela:696D3C27-F72A-4D64-BB70-A14D42CCCD5A
#+BEGIN_SRC sh
rm -rf ~/util/proselint
mkdir -p ~/util/proselint
cd ~/util/proselint
virtualenv env
venv
pip install proselint
deactivate
#+END_SRC

***** Perl
:PROPERTIES:
:ID:       A45C44A3-CDD2-4F37-81DF-93659D368EB7
:END:

- Get the [[https://www.perl.org/get.html][latest Perl]] via [[https://perlbrew.pl/][PerlBrew]]
- Verify you are using the latest
- Install CPANM because it works better with PerlBrewl
- Install [[http://search.cpan.org/~sburke/Text-Unidecode-1.27/lib/Text/Unidecode.pm][Unidecode]] for ASCII'fication

#+NAME: 2C2EE0BA-1EED-401F-83BB-31DA8485A4AC
#+BEGIN_SRC sh
curl -L https://install.perlbrew.pl | bash
~/perl5/perlbrew/bin/perlbrew install perl-5.24.0
perl -v
~/perl5/perlbrew/bin/perlbrew switch perl-5.24.0
perl -v
perlbrew install-cpanm
cpanm install Text::Unidecode
#+END_SRC
***** Ruby
:PROPERTIES:
:ID:       B7D03962-A386-4E62-AA68-3A7F95AF2CA4
:END:

For everything beyond the built in.

#+NAME: EF706E2F-46B7-4F69-ADDB-9D62FDFCD23D
#+BEGIN_SRC sh
brew install ruby
#+END_SRC
***** Racket
:PROPERTIES:
:ID:       6D423497-C4D9-41BF-831C-1A6E665908A5
:END:
#+NAME: 519EF47C-E443-4445-B762-C8FC781566F0
#+BEGIN_SRC sh
brew cask install racket
#+END_SRC
***** forth
:PROPERTIES:
:ID:       29FAB329-3F6B-4618-9B9C-1A297F3B994F
:END:
#+NAME: 1CE4F12C-241C-4B77-8262-D08472B78B4B
#+BEGIN_SRC sh
brew install gforth
#+END_SRC
***** node & npm
:PROPERTIES:
:ID:       orgmode:gcr:vela:EF414304-60AF-437D-AE4A-89532D3AEC3A
:END:

=Brew installs =NPM= by defailt with =Node=.

#+NAME: orgmode:gcr:vela:BA81BB77-0E23-4B3F-B4D7-0112502A464C
#+BEGIN_SRC sh
brew install node
#+END_SRC

****** jshint
:PROPERTIES:
:ID:       orgmode:gcr:vela:7C84C823-61B3-413B-9F23-91E87AD755A3
:END:

#+NAME: orgmode:gcr:vela:4EFB1142-C26F-4A2D-8A75-8A970646442D
#+BEGIN_SRC sh
npm install -g jshint
rm ~/.jshintrc
ln -s ~/src/help/.jshintrc ~/.jshintrc
#+END_SRC

***** GNU APL
:PROPERTIES:
:ID:       733B5BB9-A577-43D3-B837-624DAB3032AB
:END:
#+NAME: 89EB0121-7F14-4AFD-BB61-E46F675FE4A3
#+BEGIN_SRC sh
brew install gnu-apl
#+END_SRC
***** git
:PROPERTIES:
:ID:       1F0C8A4B-097E-4090-93A7-8A2958331E4F
:END:

For everything beyond the built in.

#+NAME: F5E5B964-50FA-49EF-BABF-EFE558057EC2
#+BEGIN_SRC sh
brew install git
#+END_SRC

***** EMACS
:PROPERTIES:
:ID:       11284C48-AF3A-437F-B779-15C46B08B322
:END:
#+NAME: CCF91EC0-F689-4279-972C-9F1D32C4C64B
#+BEGIN_SRC sh
brew install emacs --with-cocoa --with-gnutls --with-imagemagick
brew linkapps
#+END_SRC

***** Sourcetree
:PROPERTIES:
:ID:       11602B65-2D6C-4A6D-805C-8ED0B5509B09
:END:

#+NAME: 7143E58E-A1B9-4A5A-B189-6E88AB0612D7
#+begin_src sh
brew cask install sourcetree
#+end_src

***** sml
:PROPERTIES:
:ID:       223E3DE6-7CA4-4831-9071-A7884C941A48
:END:
#+NAME: CC15039B-B03A-4B3B-AFF4-AF483DDFE3A6
#+BEGIN_SRC sh
brew install smlnj
#+END_SRC
***** OCaml
:PROPERTIES:
:ID:       orgmode:gcr:vela:A867DCB3-0F61-43AC-A61C-5690C37B54F2
:END:

#+NAME: orgmode:gcr:vela:F8C7DC4C-3DB3-4547-9A94-AF03D2F15366
#+BEGIN_SRC sh
brew install ocaml
brew install opam
#+END_SRC

***** Haskell
:PROPERTIES:
:ID:       orgmode:gcr:vela:C394EFE3-DC3D-4BCB-A6DC-A1EF6AB4E337
:END:

#+NAME: orgmode:gcr:vela:1F488BEB-BCE5-4A80-8FC3-9E8F28E181D4
#+BEGIN_SRC sh
brew cask install haskell-platform
#+END_SRC

***** Squeak
:PROPERTIES:
:ID:       orgmode:gcr:vela:32F9C619-B381-45FD-84B9-7726B00B3CBE
:END:

#+NAME: orgmode:gcr:vela:243473A9-D8D5-4F05-BC70-99E7BFAA9C78
#+BEGIN_SRC sh
brew cask install squeak
#+END_SRC

***** cvs
:PROPERTIES:
:ID:       868C1487-47DD-40E9-832D-CBFCA6A74661
:END:
#+NAME: 50A94F7F-487B-485E-BEAE-6184D93C2933
#+BEGIN_SRC sh
brew install cvs
#+END_SRC
***** bzr
:PROPERTIES:
:ID:       000C4D3B-68E0-4356-8F1B-B9AA57F8468A
:END:
#+NAME: 0D6175B9-3005-4AB5-AA71-F34C875D2FE1
#+BEGIN_SRC sh
brew install bzr
#+END_SRC
***** mercurial
:PROPERTIES:
:ID:       4D35743F-DBC4-4A42-9104-8B4E6DB2CD5E
:END:
#+NAME: 6C03B646-2683-4BB5-88F7-D8EB337B3596
#+BEGIN_SRC sh
brew install hg
#+END_SRC
***** IntelliJ Idea
:PROPERTIES:
:ID:       313F1B11-75E2-438A-9D48-16C233F1C2DB
:END:

#+NAME: 0E3B9A2C-7E91-4D21-A9F0-A94C483B7992
#+BEGIN_SRC sh
brew cask install intellij-idea
#+END_SRC
***** PyCharm
:PROPERTIES:
:ID:       18D4526F-B616-497D-A2A6-D39A6C541147
:END:

#+NAME: 610E12B1-3C58-4326-BE81-18EF1F40D544
#+BEGIN_SRC sh
brew cask install pycharm
#+END_SRC
***** WebStorm
:PROPERTIES:
:ID:       14FBE5CB-8068-4795-A549-FFD16649E46D
:END:
#+NAME: 479B7BC3-9F35-4422-82C9-DE3722E4A4B6
#+BEGIN_SRC sh
brew cask install webstorm
#+END_SRC
***** R Studio
:PROPERTIES:
:ID:       19930D0D-7A42-468E-B60E-134F1BEAA30E
:END:
#+NAME: 8D154800-90B1-4D63-9B75-D6C3F61FED9E
#+BEGIN_SRC sh
brew cask install rstudio
#+END_SRC
***** Dash
:PROPERTIES:
:ID:       DE662BC7-83EC-4E6F-B6ED-9965C3687E60
:END:
#+NAME: 23B49731-0AA0-4FD9-AA2F-EEBBCF21C3F9
#+BEGIN_SRC sh
brew cask install dash
#+END_SRC
***** glpk
:PROPERTIES:
:ID:       EF0A6FF1-9E4E-4A30-B8A0-2EC9B6D3A295
:END:

#+NAME: 5E540A84-0B1E-4D24-9576-54B6993493BD
#+BEGIN_SRC sh
brew tap homebrew/science
brew install glpk
#+END_SRC
***** The Silver Searcher
:PROPERTIES:
:ID:       AD5FD9EA-E427-458A-9B25-244177D08640
:END:
#+NAME: 4B420426-4B25-4E40-AB5C-F7EDDDB4C0AA
#+BEGIN_SRC sh
brew install the_silver_searcher
#+END_SRC
***** shellcheck
:PROPERTIES:
:ID:       A32529E8-97E7-4347-848F-73C834447FEC
:END:

#+NAME: B4C9F9F6-E628-4771-82E5-083212B30942
#+BEGIN_SRC sh
brew install shellcheck
#+END_SRC

**** Configure
:PROPERTIES:
:header-args: :tangle "14_development.org"
:ID:       FA5E0D88-1455-4DD5-9362-D8268BBFF3BF
:END:
#+NAME: 64C2907C-7D2E-4EEA-A9EC-9AE77C823D1C
#+BEGIN_SRC org
,* DeltaWalker

- License it.
- Set preferences for new comparisons (be sure of this, easy not to)
  - General
    - Date formatting: English (United States)
    - Max available memory: 4096
    - [X] Automatically find new updates and notify me
    - Colors and Fonts
      - Basic: DJSM 14
        - Text Font
        - Text Editor Block Selection Font
      - Differences
        - Font: DJSM 14
        - Colors:
          - Addition: Green
          - Change: Yellow
          - Conflict: Red
          - Deletion: Purple
  - All Comparisons
    - [ ] Use text differencing optimized for speed
    - [X] Use text differencing optimized for accuracy
    - [X] Follow symbolic links
    - [ ] Ignore differences in whitespace
      - Want to know about tabs versus spaces
    - [ ] Ignore differences in character case
      - Interesting but default do care
    - [ ] Ignore differences in line endings (CF and LF)
      - Most systems don't care, but I do and should fix it
- Set up the "Compare with DeltaWalker.workflow"
  - Go to its [Cask location]/Extras
  - Copy it to ~/Library/Services
  - Opening it in Automator by double clicking it in Finder
  - Immediately saving it and closing it
- Save the new configuration and guit DW, and then start it again and verify
  that the settings are saved. Once they were not.
- Sample files for diffing used to be included
  - Not anymore so nothing to test

,* Sourcetree

- Log into SourceTree using BitBucket
- Skip Setup
- If you have it
  - Let it scan the BitBucket folder to add those projects to SourceTree
- Preferences
  - General: Disallow SourceTree from modifying yoru global Git config file
  - Diff
    - Set font to DJSM 14
    - Do not integrate with DeltaWalker
      - Command line Git is integrated
      - SourceTree is standalone /to be alone/
- Once you set up Git, pull a project from BB

,* IntelliJ Idea

- Pretty sure that I've got a config somewhere for this

,* PyCharm
- "use your JetBrains Account credentials in PyCharm to use this license"
- Import settings: I do not have any
- Allow it to accept incoming network connections
- PyCharm initial configuration
  - Keymap: Emacs
  - Theme: Default
  - Editor colors and fonts: Default
  - Enable opening files CMD: Yes =/usr/local/bin/charm=
- Preferences
  - Appearance & Behavior
    - System Settings
      - Usage Statistics
        - Do send anonymous statistics: weekly
    - Appearance
      - Show tool window bars
  - Editor
    - General
      - Use soft wraps
      - Appearance
        - Show line numbers
        - Use block caret
        - nil Caret blinking
    - Code Style
      - Right margin column: 80
      - Wrap on typing: YES
    - Colors & Fonts
      - [[https://github.com/jkaving/intellij-colors-solarized][Solarized Theme]]: Dark
        - Do this first
      - Font
        - DJSM 17
      - General
        - Editor -> Caret: #839496
,* WebStorm
- Same configuration as PyCharm

,* Dash

- Install the license file
- Settings
  - General
    - Yes: Launch Dash at login
    - Yes: Restore all tabs from last session
    - Global search shortcut: s-F12
    - Search using selected text: nil
    - Window style: Standard
    - Behavior
      - No: Show dock icon
      - Yes: Show menu bar icon - clicking toggles menu
      - Yes: Dismiss main window when I activate a different app
      - Syncing: Let alone
  - Downloads
    - .NET Framework
    - Android
    - AngularJS
    - Apache HTTP Server
    - Bash
    - Bootstrap 3
    - C
    - C++
    - Clojure
    - Common Lisp
    - CSS
    - Django
    - Emacs Lisp
    - Flask
    - Go
    - Grunt
    - Gulp
    - HTML
    - iOS TODO
    - Java EE6
    - Java EE7
    - Java SE6
    - Java SE7
    - Java SE8
    - JavaScript
    - Docsets
    - LaTeX
    - LESS
    - Linux Man Pages TODO
    - Mac OS X TODO
    - Man Pages
    - Markdown
    - MySQL
    - NGINX
    - NodeJS
    - OCaml 4.02.3
    - Perl
    - PHP
    - PHP Unit 5.2
    - PostgreSQL
    - Python 3
    - R
    - Racket
    - Require JS 2.2.0
    - Ruby
    - Rust
    - Sass 3.4.22
    - Spring Framework
    - SQL Alchemy
    - SQLite
    - SVG
    - Swift
    - TCL
    - UnderscoreJS
    - Vagrant
    - VIM
    - VMWare vSphere
    - WordPress
  - Remote
  - Integration
  - Snippets
  - Updates: Automatically, Saily

,* XCode

- Preferences
  - Downloads
    - Components (Document things that I installed)
    - Documentation (Document things that I installed)
      - iOS 9.2 Documentation
      - OS X 10.11.2 Documentation
      - XCode 7.2 Documentation
    - Stand alone checkbox
      - No: Check for and install updates automatically

,* The Silver Searcher

- NA

,* RStudio

- RSudio
  - Preferences
    - General
      - Default working directory (when not in a project): ~
      - Restore most recent project: Yes
      - Restore previously open source documents: No
      - Restore .RData: No
      - Save worksapce to .RData: No
    - Appearance
      - Editor font: DejaVuSansMono
      - Font size: 12
      - Editor theme: Solarized Dark
#+END_SRC
*** Manual
:PROPERTIES:
:header-args: :tangle "15_manual.org"
:ID:       CFDA666A-254C-4DE4-825E-872A878A47F6
:END:
**** PDFPenPro
:PROPERTIES:
:ID:       orgmode:gcr:vela:C9840373-A2E1-4F87-8410-5C21F7F8B563
:END:
**** SimPL Font
:PROPERTIES:
:ID:       FADD0245-BBCD-43BB-A103-DC994EBC449E
:END:

- http://wiki.nars2000.org/index.php/APL_Font

**** NewGardiner TrueType Font
:PROPERTIES:
:ID:       E015C9C9-67ED-4FD8-8F81-256CDD705E40
:END:

- [[https://mjn.host.cs.st-andrews.ac.uk/egyptian/fonts/newgardiner.html][See]]
- Install =NewGardinerSMP.ttf=

**** The R Project
:PROPERTIES:
:ID:       0850CC94-1829-427F-BF9A-9F5353902B54
:END:

- Context
  - =brew install r= has runtime issues on /my/ machine
  - =brew cask install r= has a bad download link
  - Therefore install the package manually from a CRAN mirror
- Downloaded the pkg
- Ran the package
- It finishes
- Run the linking script for the R config files in R.org

**** Microsoft Office
    :PROPERTIES:
    :ID:       568C1BC2-1569-4E3A-8246-594E0C889244
    :END:

#+NAME: C38471A4-27EF-4543-9076-299EC7FE2086
#+BEGIN_SRC org
MS Office This is in BrewCask, but the download is waste of time. I have it
locally. Use the version I bought; not the latest which is in brew.

I keep going back and forth on this one. Is it worth saving 15 minutes having to
install it myself?

Start it. It asks for your name. It asks about updates and stuff. Get them all.
Start Outlook. Enter in new license for that.

When activation occurs, the app always locks up then I quit it and it restarts
after sending an error report.

Don't let it access Contacts.

When it checks for updates, tell it to check daily.
#+END_SRC
**** OSX Enhanced Voice Dictation
    :PROPERTIES:
    :ID:       C8E3A6E9-16E6-4ABD-A667-0E952D38D3E4
    :END:

#+NAME: D7DCD73D-1ABA-4C47-B6C8-4E47C86EB13B
#+BEGIN_SRC org
,* OSX Enhanced Voice Dictation

Somehow I activated the installer for "OSX Enhanced Voice Dictation". I said "Yes".
Found [[https://support.apple.com/en-us/HT202584][this]] guide and here are the steps:

- Apple
- System Preferences
- Dictation & Speech
- Dictation
- Enable
- Yes: Use Enhanced Dictation
- [X] Speak selected text when the key is pressed:
  - Option+Esc
#+END_SRC
**** Visible Body
    :PROPERTIES:
    :ID:       07ADFC51-E81C-46C1-8D1F-40FB11A93BEC
    :END:

#+NAME: D569323D-3922-4D3A-814D-B6413DBBE3F2
#+BEGIN_SRC org
,* Visible Body

- Human Anatomy Atlas
- Muscle Premium
- Skeleton Premium
- License key
  - Copy directory from the email
  - Tried printing to pdf or saving to a file and copying from that and neither
    work
  - Need to copy from their into an Org document and try that
#+END_SRC

**** Entropy
    :PROPERTIES:
    :ID:       9EDE18B7-DDA1-4FC1-8866-256596BA54D0
    :END:

#+NAME: CBFB0524-49A3-475E-BE72-F72F878355D7
#+BEGIN_SRC org
,* Entropy

- [[http://www.eigenlogik.com/entropy/][Download]]
- Install
- License
#+END_SRC

**** Guitar Pro
    :PROPERTIES:
    :ID:       36F3F9F6-31D1-4517-94F3-B7A787F2C166
    :END:

#+NAME: 8D86833F-9C6A-430B-A238-D1537470EC46
#+BEGIN_SRC org
,* Guitar Pro

- [[http://www.guitar-pro.com/en/index.php][Here]]. Sign into MySongBook.

#+END_SRC

**** Cepestral Callie & David
    :PROPERTIES:
    :ID:       FB2138CF-B62C-4BCB-A892-AB855A61535A
    :END:

#+NAME: 350809D4-E824-4F60-B121-CD6E34B62075
#+BEGIN_SRC org
,* Cepestral Callie & David

[[http://www.cepstral.com/][Here]].

You might need to log out and in again to make the "Cepstral Voices" appear in
System Preferences.

License them. Test them.

Set Dictation & Text to Speech to: Callie
#+END_SRC

**** Pushbullet
:PROPERTIES:
:ID:       3CF13F86-EFBB-4CCD-A169-FC803EE5E2E7
:END:

#+NAME: D47EAF07-91D0-4916-B6CD-AD0D126C05A9
#+BEGIN_SRC org
,* Pushbullet

- Sign in, it is a web app
- Allow contact access
- Install into Chrome, choose it
- [X] Text from phone
- [X] See notifications
- Configure nothing else

#+END_SRC
**** Ink2Go
:PROPERTIES:
:ID:       03A7A747-85CA-4414-A41D-7B9A2CC2B1A5
:END:

#+NAME: 2534FD8E-2749-4EE5-87C3-B813B25AF4BB
#+BEGIN_SRC org
,* Ink2Go

- [[http://ink2go.org/][Here]]
- License it
- Preferences
  - Keyboard Shortcuts
    - Command-F12: Activate
    - Command-F11: Activate+Pen
  - Toolbar
    - Everything enabled but
      - Crop / Pause
      - Record / Stop
      - Webcam
#+END_SRC

**** Dyalog APL
:PROPERTIES:
:ID:       F17C4B5B-1834-4266-9E51-A9A6F6D07260
:END:

#+NAME: C621D8B5-B34E-48D7-BF7A-C8E316BA10FB
#+BEGIN_SRC org
,* Dyalog APL

- NA
#+END_SRC

****
**** App Store Installs
   :PROPERTIES:
   :ID:       798AD4C6-AFB7-4AB6-B794-16E1E83CDF5C
   :END:

***** Debtinator
:PROPERTIES:
:ID:       1E321453-054F-4040-A2C4-77D4895AB34B
:END:

#+NAME: C621D8B5-B34E-48D7-BF7A-C8E316BA10FB
#+BEGIN_SRC org
,* Debtinator

- NA
#+END_SRC
***** Textual IRC Client
:PROPERTIES:
:ID:       B817D3AE-D105-4957-B229-8DF479E9E5F4
:END:

#+NAME: BBAFAEFB-E9B6-443C-8DAC-424483885BF2
#+BEGIN_SRC org
,* Textual

- AppStore.

Only note changes from the current default

Set up preferences:

- Preferences.
- General.
  - YES: Save the state of queries
- Highlights.
- Notifications.
- Controls.
- Interface.
- Style.
  - General.
    - Style: Equinox
    - Font: DJSM 17
  - Inline Media.
    - YES: Show images inline
- Addons.
- Advanced.
  - Default Identity.
    - grettke
    - grettke💤
    - grettke
    - Grant Rettke

Server properties:

- Basic Settings.
  - General
    - YES
      - Connect when Textual opens
      - Perform reconnect on disconnect
      - Perform reconnent on waking from sleep
- Identity
  - Wait for ID before joining
  - Enter personal password; everything else got set from main screen
  - Do wait for identification before joining channels

- Join on Freenode
  - #org-mode
  - #emacs
  - #scheme
  - #bash
  - #apl
#+END_SRC
***** Growl
:PROPERTIES:
:ID:       48048FB4-E77B-4226-82EF-BA8AA30E2D37
:END:

#+NAME: 292B3960-AD89-413E-8E67-2BDBBAC7ACBE
#+BEGIN_SRC org
,* Growl

- Install via the app store
- Start it
- Enable run on login
- Theme: Music Video
  - Easy to notice
#+END_SRC
***** Microsoft Remote Desktop
    :PROPERTIES:
    :ID:       BF68C6A0-9F79-4372-8503-CD8B0BE3331A
    :END:

#+NAME: D86C6A4D-08CB-4674-81CA-4777E3AAAF8B
#+BEGIN_SRC org
,* Microsoft Remote Desktop

- Don't open the session full-screen.
#+END_SRC

***** Text2Speech PRO
    :PROPERTIES:
    :ID:       40206D84-014A-43FC-8299-D4C8594FE691
    :END:

#+NAME: 725DFF13-3E51-4B7E-90B3-19F07375B26E
#+BEGIN_SRC org
,* Text2Speech PRO

- General
  - Preferences
    - Voice :: Cepstral Callie
    - Speaking Rate :: 175 w/m
    - App check text encoding failover :: UTF-8
    - [ ] Send file to iTunes
#+END_SRC

***** PixelMator
    :PROPERTIES:
    :ID:       76178B97-5BEE-4341-86C7-757138319E18
    :END:

#+NAME: 05AD3C3A-761E-4CD5-8D45-FCF487A0DAEE
#+BEGIN_SRC org
,* PixelMator

- NA
#+END_SRC

***** Mousepose
:PROPERTIES:
:ID:       BBCE99EB-E786-4D38-B7B0-C46BEE2B1B43
:END:

#+NAME: BA8A896A-29EE-43F5-AF6C-B9DB80E18115
#+BEGIN_SRC org
,* Mousepose

- Grant "accessibility" permission
- Settings
  - Mousepose
    - Toggle Hotkey: Control-Escape
    - Advanced
      - Increase hotkey: C-2
      - Decrease hotkey: C-1
      - Window focus toggle: C-3
  - Mouse Clicks
  - Keystrokes
    - Default is standalone
    - Hotkey: C-4
  - Miscellaneous
    - When logging in: Start Mousepose
    - Show icon in: Menu bar
- Bartend it
#+END_SRC

***** Webcam Settings By Mactaris
:PROPERTIES:
:ID:       AB612B97-BDFA-4322-AF4A-C4F9CDFE392B
:END:
#+NAME: 142DA74D-407B-4F49-B833-093BB5EB83B6
#+BEGIN_SRC org
,* Webcam Settings By Mactaris

- Set the white balance
  - Hold up a bleached white piece of printer paper to the camera
  - Balance until it is the same color on the screen
#+END_SRC

***** Key Codes
:PROPERTIES:
:ID:       DE26900A-EB07-4BC9-9301-C642A7B8BE81
:END:

#+NAME: 9AB3A903-24AA-430D-9B74-D0B9D787C2DD
#+BEGIN_SRC org
,* Key Codes

- NA
#+END_SRC

*** SSH and Git
:PROPERTIES:
:ID:       A700593A-3D0C-49F0-AE05-2FAA5DFC95EF
:END:
**** Generic
:PROPERTIES:
:header-args: :tangle "16_git-generic.sh" :tangle-mode (identity #o755)
:ID:       F008829D-FCC5-426E-8CB6-3E3DED5EE2AF
:END:

OSX creates this directory everywhere and it must be ignored. This code block
is surprising. It lives here because it should only hapen /after/ installing Git.

#+NAME: 53F16E84-34DC-48D1-998C-B9214B32AD1E
#+begin_src sh
echo .DS_Store > ~/.gitignore_global
git config --global core.excludesfile ~/.gitignore_global
#+end_src

- Do you really want to create a new SSH and Git configuration?
- Did you /already/ ran this script and you are copying over those files onto
  this new box?
- Check if the user wants to do that work again and make it easy to exit the
  script

#+NAME: orgmode:gcr:vela:AD6DEA88-0EB1-4B7C-A2C6-E27C0EC92604
#+BEGIN_SRC sh
echo ""
echo "With your help I configure SSH for you"
echo ""
echo "First I =rm -rf ~/.ssh= *destroying* your entire SSH configuration"
echo "Second I create a public and private keypair"
echo "Third I create a config file for Github and Bitbuccket"
echo "Fourth you upload your public SSH key both to Github and Bitbucket"
echo "Fifth I test each connection out and let you know if it worked"
echo ""
echo "Then again maybe you *don't want me to do any of that*"
echo "Maybe you already ran this script want to *keep* it"
echo "Maybe you brought an existing config and key pair files with you"
echo "Doesn't make any difference... its completely hypothetical"
echo ""
echo "Time to choose:"

PS3="Your choice (press the corresonding number): "

bail="*Stop*. *Don’t*. *Get me outta here*. *Exit this script*."
stay="Yup. Gotcha. Do it. Run this script."
options=("$bail" "$stay")

select opt in "${options[@]}"
do
    case $opt in
        "$bail")
            echo "*Sayonara*"
            sleep 1
            exit
            ;;
        "$stay")
            echo "Gotcha. Running it."
            sleep 1
            break
            ;;
        ,*)
            echo "You're not getting outta here until you choose."
            ;;
    esac
done
#+END_SRC

Generate the key. There is no passphrase.
#+NAME: 41FF7AA3-8273-4281-A7E8-C60B048723D4
#+begin_src sh
rm -rf ~/.ssh
mkdir ~/.ssh
cd ~/.ssh
echo "What email address would you like to use for this SSH key?"
read SSHEMAIL
SSHID=`whoami`-`hostname`
SSHUID=$SSHID-`date '+%Y_%m_%d_%H_%M_%S'`
SSHFILE=$SSHUID-rsa
ssh-keygen -N '' -t rsa -C $SSHEMAIL -f $SSHFILE
#+end_src

Set permissions so that =ssh= will run.

#+NAME: 298B36CF-28A0-45CC-BACF-787EAB06F348
#+begin_src sh
chmod 600 ~/.ssh/$SSHFILE
chmod 600 ~/.ssh/$SSHFILE.pub
ssh-add -K ~/.ssh/$SSHFILE
#+end_src

Add they key to Bitbucket and Github.

#+NAME: 3934CA71-20AE-4136-AB57-1DEF8EBC0ADB
#+begin_src sh
echo "Name your Git site key: $SSHFILE"
cat ~/.ssh/$SSHFILE.pub | pbcopy
read -p "The new key is in your clipboard. Go and add this key to BitBucket and GitHub. When you are finished, hit [enter] to continue."
#+end_src

Set up ~/.ssh/config.

#+NAME: 70D5D9F2-6CFC-4FB5-BC45-416B4ABA029F
#+begin_src sh
cat > ~/.ssh/config << EOF
Host github-`whoami`
     HostName github.com
     User git
     PreferredAuthentications publickey
     IdentityFile ~/.ssh/$SSHFILE.pub
Host bitbucket-`whoami`
     HostName bitbucket.org
     User git
     PreferredAuthentications publickey
     IdentityFile ~/.ssh/$SSHFILE.pub
EOF
#+end_src

Test each one out.

#+NAME: 07933181-5F02-43CB-9DF8-232DA213E4BB
#+begin_src sh
ssh -T github-`whoami`
read -p "Did it work? If not, fix it. [hit enter to continue]"
#+end_src

Separate them to allow for easier copy-pasting.

#+NAME: 66DAC891-FB97-48A8-9C8B-0292095F13A6
#+begin_src sh
ssh -T bitbucket-`whoami`
read -p "Did it work? If not, fix it. [hit enter to continue]"
#+end_src
**** Personal
:PROPERTIES:
:header-args: :tangle "17_git-personal.sh" :tangle-mode (identity #o755)
:ID:       83EF8B0F-8415-4870-98A7-B9B9F8A8481C
:END:

Set up my preferences.

#+NAME: C85D0036-9DDA-4786-9621-470FB418BBD6
#+begin_src sh
git config --global user.name "Grant Rettke"
git config --global user.email gcr@wisdomandwonder.com
git config --global color.ui true
git config --global core.autocrlf
git config --global alias.st status
git config --global alias.ci commit
git config --global alias.dt difftool
git config --global alias.mt mergetool
git config --global diff.tool deltawalker
git config --global difftool.deltawalker.cmd '/opt/homebrew-cask/Caskroom/deltawalker/2.1.2/DeltaWalker.app/Contents/MacOS/git-diff $LOCAL $REMOTE'
git config --global difftool.prompt false
git config --global merge.tool deltawalker
git config --global mergetool.deltawalker.cmd '/opt/homebrew-cask/Caskroom/deltawalker/2.1.2/DeltaWalker.app/Contents/MacOS/git-merge $LOCAL $REMOTE $BASE $MERGED'
git config --global mergetool.keepBackup false
#+end_src

Check out projects to get basic stuff working.

#+NAME: 5BD1669B-8E2A-46B5-AB80-88DA5764DEEB
#+begin_src sh
rm -rf ~/git/bitbucket
rm -rf ~/git/github
rm -rf ~/src/help
mkdir -p ~/git/bitbucket
mkdir -p ~/git/github
cd ~/git/bitbucket
git clone bitbucket-`whoami`:grettke/list.git
git clone bitbucket-`whoami`:grettke/resume.git
git clone bitbucket-`whoami`:grettke/notes.git
git clone bitbucket-`whoami`:grettke/signature.git
git clone bitbucket-`whoami`:grettke/grant-personal.git
git clone bitbucket-`whoami`:grettke/correspondence.git
git clone bitbucket-`whoami`:grettke/wnw.git
git clone bitbucket-`whoami`:grettke/texmf.git
git clone bitbucket-`whoami`:grettke/hardware
git clone bitbucket-`whoami`:grettke/tracking01
cd ~/git/github
git clone github-`whoami`:grettke/osx-provision.git
git clone github-`whoami`:grettke/bash.git
git clone github-`whoami`:grettke/wisdomandwonder.git
git clone github-`whoami`:grettke/Linux-Nginx-MariaDB-PHP-WordPress.git
git clone github-`whoami`:grettke/home.git
#+end_src

At this point, the Bash initialization files point at the directory with my
SSH key. Log out and in again and delete the anonymous pull. Not sure how to
automate this part yet.

#+NAME: F407E69A-6C92-4254-A0E3-A442166AD57B
#+begin_src sh
cd ~/git/github-anonymous
git clone https://github.com/bkuhlmann/osx
git clone https://github.com/monfresh/laptop
rm -rf ~/src
mkdir ~/src
cd ~/src
git clone github-`whoami`:grettke/help.git
rm ~/.emacs.el
ln -s ~/src/help/.emacs.el ~/.emacs.el
rm -rf ~/.emacs.d
mkdir ~/.emacs.d
ln -s ~/src/help/eshell/ ~/.emacs.d/eshell
#+end_src

*** Org-Mode
:PROPERTIES:
:ID:       C1DA9537-9D9B-493B-9318-4ABEEAFEA86B
:END:
**** Install
:PROPERTIES:
:header-args: :tangle "18_org-mode.sh" :tangle-mode (identity #o755)
:ID:       F2B0FCF0-1F56-4D3B-AC9F-10F4E430BBE2
:END:

#+NAME: 916D6512-03E7-4971-8BAC-53D6FA258BBD
#+BEGIN_SRC sh
rm -rf ~/src/org-mode
rm -rf ~/src/org2blog
rm -rf ~/src/use-package
cd ~/src
echo `date +%Y-%m-%dT%H:%M:%S%z`
git clone git://orgmode.org/org-mode.git
echo `date +%Y-%m-%dT%H:%M:%S%z`
cd org-mode
make autoloads
cd ~/src
git clone git@github.com:punchagan/org2blog.git
git clone https://github.com/jwiegley/use-package.git
#+END_SRC

*** TeX
:PROPERTIES:
:ID:       C1DA9537-9D9B-493B-9318-4ABEEAFEA86B
:END:
**** Install
:PROPERTIES:
:header-args: :tangle "19_tex.sh" :tangle-mode (identity #o755)
:ID:       F2B0FCF0-1F56-4D3B-AC9F-10F4E430BBE2
:END:
***** MacTeX
:PROPERTIES:
:ID:       17B20C34-B6E5-478E-BDF5-F7E56588AE7E
:END:

Configuration comes at the end after my Git stuff is set up.

Download speed varies wildly.

#+NAME: C4F43DC6-97F3-4237-9746-B40243C20950
#+BEGIN_SRC sh
brew cask install mactex
#+END_SRC
***** GnuPlot
:PROPERTIES:
:ID:       CD0644AD-7F3D-4FE7-A3B4-32000755E7B1
:END:

Must install TeX before GNUPlot.

#+NAME: A6FDD2B6-412D-41A5-B58A-942C6540BB57
#+BEGIN_SRC sh
brew install gnuplot --with-latex --with-pdflib-lite --with-test --with-x11
#+END_SRC
**** Configure
:PROPERTIES:
:header-args: :tangle "20_tex.org"
:ID:       FA5E0D88-1455-4DD5-9362-D8268BBFF3BF
:END:

#+NAME: ED1E3F61-2842-4EA3-A5BF-22B76B0DEBEA
#+BEGIN_SRC org
- I value seeing these commands succeed so pasting them is OK
- MacTeX installation is typically so painful that I want this part to be easy

Set up my TeX stuff for KOMA-script. Backup the default configuration first.

,#+NAME: 4053A83F-EA3D-4431-AA4A-62336DF2F95E
,#+begin_src sh
ls /usr/local/texlive/2015
sudo cp /usr/local/texlive/2015/texmf.cnf /usr/local/texlive/2015/texmf.cnf-`date '+%Y_%m_%d__%H_%M_%S'`
ls /usr/local/texlive/2015
sudo tlmgr conf texmf TEXMFHOME ~/git/bitbucket/texmf/
,#+end_src

Check that the path is really updated.

,#+NAME: 34890901-8E9D-46E5-9738-2718CD26908E
,#+begin_src sh
kpsewhich KomaDefault.lco
,#+end_src

The documents say to maybe do the following. I did it.

,#+NAME: 008DCE01-EE0D-4A96-93A5-7B6E91D7C951
,#+begin_src sh
sudo mktexlsr
,#+end_src
#+END_SRC
** Testing
:PROPERTIES:
:header-args: :tangle "21_testing.org"
:ID:       44798E7B-AC1F-4FD8-AB5E-3A3563B79C4B
:END:

#+NAME: 0E466E47-8ED3-4462-8939-2318ED91AD64
#+BEGIN_SRC org
- [ ] Get Emacs running
  - Usually problems with package loads
  - Start emacs with --no-init-file and install
    - nlinum
    - restart it
  - Start emacs normally and the repos are loaded, and when the load files, install
    - diminish
    - lexbind-mode
    - Loads correctly
  - Broken Org-Mode
    - This checks out Org-Mode from the trunk. Sometimes stuff get's
      broken. My config debugs on error. The goal is to always have
      a working system. Sometimes, I copy over a working copy of Org
      or any of the libraries onto the host if there are issues.
- [ ] tangle
  - Tangle the document successfully
- [ ] execution
  - Delete every result block: just do it manually search for =#+RESULT=
  - Delete all image output
  - Execute entire document successfully
  - Images re-appear
- [ ] eshell
  - Run it
  - Emacs uses correct HELP directory
- [ ] ccrypt
- [ ] ispell
- [ ] weasel words
- [ ] langtool
  - Verify installation, can have the wrong dir and the tool just says that
    there are no issues
  - Run =langtool-check-buffer=
  - ~qk c~ does the scan, ~qk C~ suggests corrects, verified on a corresponsence
- [ ] Correspondence
  - Pick a letter
  - Address and signature and everything looks right
- [ ] Messages
  - Make sure that there are no startup warnings or issues
- [ ] Build resume
  - Blow away out-files and make
  - [ ] MD
  - [ ] TXT
  - [ ] PDF FULL
  - [ ] PDF ONE PAGE
  - [ ] DOCX
- [ ] Export to everything
  - Longest test, takes 35m on a VM
  - This is used for publishing
  - First delete everything
  - [ ] html
    - Images are links, not images
  - [ ] md
    - Images are links, not images
  - [ ] pdf
  - [ ] txt
#+END_SRC
* Full System Backups
  :PROPERTIES:
  :ID:       01B5C019-E0D3-45A1-9C36-A6B493C03DE8
  :END:
** On the Host
:PROPERTIES:
:ID:       5DA1CA11-12E2-418E-9CAC-8667594DECF5
:END:
Doing provisioning using Kitchenplan and Brew and BrewCask still takes at least
6 hours. You still need to perform manual steps. For me, it is unavoidable. This
is painful. This is a waste of 6 hours. It is the waste of your evening. It is a
waste of your weekend.

My new plan is to get the box provisioned and image it there. I want to minimize
provisioning ever again. The opportunity here is that you learn new things each
time. That is cool. The problem is that your goal is not to learn new things
every time. It is a decision, and it needs to be thoughtfully made. This
evidence is valuable. It has helped me understand my decision to work in
virtuals here forward.

To image a full system:

- Note the base configuration, =01=
- Get system and application updates
- Trim contents of included-folders
  - Most of my stuff will never be in them anyway
  - More like DropBox and Git
    - Keep Git checkouts. Simpler. Update will get new stuff.
  - =/Users/gcr/Documents=
  - Empty the trash
  - Vagrant box definitions will exist under source control, but the individual
    boxes will only ever live in the storage locations configured for the
    provider
  - Double-check that all of your Git working-copies are pushed home.
- Disk utility
  - Verify disk permissions
    - Logs a lot of info
    - Unsure if any of it is useful
  - Repair disk permissions if necessary
    - At the very bottom will log "Permissions repair complete"
  - Verify disk
  - Repair disk if necessary
- For the clone exclude
  - =/Users/gcr/Downloads=
  - =/Users/gcr/Dropbox=
  - =/Users/gcr/tmp=
  - =/Users/gcr/.vagrant.d/boxes=
    - [[http://docs-v1.vagrantup.com/v1/docs/boxes.html][Reference]]
    - How this works is that when CCC cloned that disk image back to the machine,
      this directory was present, and it was empty. I was curious about whether
      the directory would be present or not and happy to see it was.
    - After upping a box successfully, I verified that the base box was
      installed here as expected
  - =/VirtualBox VMs=
    - VirtualBox stores its VMS here by default
    - When you start making changes to a Vagrant box, they are saved [[https://stackoverflow.com/questions/8225820/where-is-vagrant-saving-changes-to-the-vm][here]]
    - For example I booted up the Vagrant box from "Getting started", created a
      hello world file, logged out and halted it, and this directory was
      =tmp_default_1426807980079_94539= was created in there and it contained all
      of the .vbox stuff for that machine.
      - Verified that =vagrant destroy= deletes that directory
  - =/Users/gcr/Documents/Virtual Machines=
    - http://kb.vmware.com/selfservice/search.do?cmd=displayKC&docType=kc&docTypeID=DT_KB_1_1&externalId=2056798
    - This seems to be the directory where VMWare creates machines when you do
      so through the GUI
  - When Vagrant VMWare Fusion creates machines it creates them inside of a
    =.vagrant= directory where the Vagrantfile lives.
      - The path is =<directory where the Vagrant file lives>/.vagrant/machines/default/vmware_fusion=
      - Found this info [[https://blog.safaribooksonline.com/2014/01/16/building-vagrant-vms-with-the-vmware-fusion-provider/][here]] and verified it on my machine
      - Verified that =vagrant destroy= deletes that directory
- Make sure that this configuration, including Kitchenplan, is tagged
- Note that tag here:
  - Machine name
  - Built from image
  - Provisioning Tag
  - Timestamp
  - c02M-01-v1.7-2015-03-17T18:58:40-0500
- On successful creation of the new image
  - Erase the machine and clone the new image to it
    - Address any image restoration issues now
  - Backup this new image to Stargate
  - Copy thse Dropbox folder

#  LocalWords:  doesn AppStore kitchenplan railwaycat's paralellize dev GitHub
#  LocalWords:  BitBucket repo smartphone OSX EF FS CCC Journaled MOSEJ XCode
#  LocalWords:  journaled Xcode CLT IDE KitchenPlan BrewCask PyCharm JetBrains
#  LocalWords:  Keymap CMD Solarized DJSM WebStorm DeltaWalker DiffMerge vc el
#  LocalWords:  Magit passphrase Bitbucket Github GitPython Stathon Config VLC
#  LocalWords:  LaTeX emacs login XQuartz Karabiner Growlnotify CCrypt Langtool
#  LocalWords:  Ditaa startup reprovisionined ImageMagic eshell config Dropbox
#  LocalWords:  reproducibility Filezilla SourceTree Pandoc MacTeX Freemind MiB
#  LocalWords:  mindmaps MacVIM Enscript Virtualbox VMWare VirtualBox Libre IRC
#  LocalWords:  MOTD nox Addons grettke Rettke Recomment MySongBook GotoMeeting
#  LocalWords:  WebMeeting Cepestral Cepstral MacTex GnuPlot GiB gnuplot KOMA
#  LocalWords:  PixelMator Keychain keychain rarr VoiceOver virtuals DropBox bc
#  LocalWords:  gc VMs tmp vbox Timestamp Stargate README DevOps Cloner
** On the Guest
:PROPERTIES:
:ID:       4D6CFC4A-A907-466F-80A4-E9C4C66C59D7
:END:

- Make a copy of the entire folder
