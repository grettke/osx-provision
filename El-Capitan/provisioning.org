* Goal
:PROPERTIES:
:ID:       572893EF-E80B-411B-9355-8CAB3DB23C27
:END:

** Desire
:PROPERTIES:
:ID:       17BA9F22-3B3E-427E-AC9B-0DF8D10BFD32
:END:

- To quickly and easily
  - Explore cognitive spaces using operating systems and software
  - Try, fail, learn, improve, and repeat
  - For expensive operations measured in time and complexity
    - Minimize their execution time
      - Central Processing Unit (CPU)
      - Input/Output (IO)
    - Rebound from failure
  - Share

** Satisfaction
:PROPERTIES:
:ID:       77F8D1AF-B388-4512-B9C2-79F97533CC88
:END:

- First-class support for OS X, Windows, Linux and all of their software
- Manage machines as easily and flexibly as you would with version control
- Use the fastest devices possible for every operation
- First class operating system image management
- Virtual machines (VM)

** Decision
:PROPERTIES:
:ID:       643E82D4-08E8-40B5-9006-3936A0775A35
:END:

- Current:
  - Macintosh Computer (Mac)
  - OS X
  - VMWare Fusion Professional
- With /Best/:
  - Solid State Disk (SSD)
  - RAM
  - CPU count and speed

** Lessons Learned
:PROPERTIES:
:ID:       0D8B4834-2E1E-4F1A-9299-5948A1FFAC55
:END:

- Verify easily verifiable operations
  - Installation scripts often reveal new information
- Either name things with a meaningful name or a 6 digit UUID from
  [[https://www.uuidgenerator.net/][Online UUID Generator]]
  - In the beginning this helped me keep track of disks, VMs, and software;
    by working through it I found that names were more meaningful, only after
    developing the sections for the defition (and name)
- Evidence based; no fantasy or delusion
  - Decide using experience; in absence make a best decision and move on
  - It takes at least 3 iterations before things start making sense
- "Thinking ahead" is crippling
- Snapshot
  - After expensive operations
    - Can always delete them later
    - Easy to for get how to do
  - Snapshot frequently; you never know how things will go
    - You will forget to do this
    - You will only care after something got wrecked
- Don't go to sleep in the middle of configuration sections
- Get the fastest Internet sold before starting
- Remember that Control-Command-F pressed inside of a host tells VMWare
  to go to and from full-screen.
- VMWare's folder sharing
  - Works perfectly for sharing between two guests a lot of the time. When it
    quits working I log in and out of one of the guests and it works again
    - Happens often
  - Is happy with Finder and unhappy with Eshell, so don't use Eshell in shared
    directories. They just stop working.
- Java
  - Sometimes the installation directory includes the build number. Sometimes
    it does not.
- Writing 100% automated idempotent scripts is worth the effort
  - It is not worth the effort for theoretical reasons because it is usually
    faster to do it by hand. The first 2 or 3 times you perform a task, it is
    slow, and then you figure it how to do it all correctly and then you can
    perform it quickly. You might ask yourself "If I can do it this quickly then
    why bother automated it?" because of the extra effort. That is a good
    question. When you are doing it, it is faster to do it by hand. Here is the
    problem that I ran into: you make mistakes that you find long after the
    set up. The /right/ thing to do is to correct the documentation/scripts and
    then rebuild the image. If you left manual steps then you have to do that
    work all over again. I know this seems obvious, but at the time, it didn't
    seem worth the effort of automating everything. Now much later, I'm left
    with a system imaged somewhat differently than the documentation. It is
    worth the effort to automate everything. The item on snapshotting makes this
    eaiser.
  - After using them only 2 times you will feel how flexible and fun it makes
    the whole development process
- Never allow manual steps
  - If they are unavoidable then move them all to the same place to get them
    over with and start the automated part
- Make VMWare Disk Drive capacity in multiples of 8
  - That way they can be easily shared and transferred on SD cards
- VMWare Fusion hard disk size
  - VMWare does not pre-allocate disk space and doesn't give you the option
    to do so. This is different than VMWare Workstation and that might surprise
    you.
- Spending most of my time on OSX
  - Started out planning on using 100% OSX. That led me to realize that I
    value OSS/Emacs the most. So I started to set up Linux. Through that effort
    I realized how much I've invested on the OSX platform. I felt that not only
    would it take too much additional effort to migrated to Linux; but more-so
    that the investment would take away from future work I would be doing on
    OSX. Both thing are surprising.
- A new to me option is to download everything and don't configure it until you
  need it
  - Pros
    - Faster setup
    - Only use what you need
    - Nothing stopping you from configuring anything; key is to know what you
      want immediately available when you restore a snapshot or image, assuming
      that it is not automatically configurable or you don't want to
      automatically configure it (which is rare)
- Deleting the RP
  - DU does not list the RP. CCC does. You work a lot with DU and a little with
    CCC. When you modify the disk partitions, you have to rebuild the RP with
    CCC. It is easy to forget to do this. I am not sure now how to restore th
    RP without a working RP.
- Utilize compressed disk images
  - Save space
  - On the SSD they are fast
- How to utilize hosts and guests
  - I had the idea that I would work 100% in the guest because that is simple
    and familiar. It didn't work out well because audio in Skype was horrible.
    So I installed Skype in the host and use it there. Now I use both host and
    guest.
    - Is it a waste of space to use the same provisioner for both host and
      guest? No. It is important to have one script that does the right thing
      instead of having to worry about two boxes. It also fails the goal of
      having a single transportable and re-usable guest that can easily and
      completely move between hosts.

* Dictionary

- Carbon Copy Cloner (CCC)
- Disk Utility (DU)
- Install OS X El Capitan Application (IOSXECA)
  - Application used to
    - Upgrade current installation to 10.11
    - Create USB boot-disks to install 10.11
    - Drag into VMWare Fusion to install guests
- Pristine Host Operating System Image (PHOSI)
  - A hard disk imaged from Apple
- Pristine Host Operating System Disk Image (PHOSDI)
  - A disk-image created from a ~PHOSI~
- Recovery Partition (RP)

* Preparation
:PROPERTIES:
:ID:       1BF6D42F-2F80-467E-B75C-DB2C88F0B4BE
:END:

** External Drive
:PROPERTIES:
:ID:       9EC3FF1F-8416-449D-8860-3B4ABCEBB09B
:END:

Get a 7200RPM 1TB external disk drive with USB3 or Lightning.

Create a partition named =Storage= that is at least 100GB. The =EXT:= naming
convention is to indicate that it lives on an external device. This is helpful
to make sense of partitions there versus on the Macintosh HD. That is not part
of the name of the partition itself. I'll use that naming also to indicate
computers that contain a single disk drive.

** Software
:PROPERTIES:
:ID:       3BC9B846-919F-4395-8926-8C2AABB0FF6A
:END:

- Before provisioning software installs, I downloaded these manually and stored
  them because they are critical to the setup process

*** Carbon Copy Cloner (CCC)
:PROPERTIES:
:ID:       93F797EC-1166-4667-A2ED-C8251CB9998A
:END:

[[https://bombich.com/][Purchase]] the latest version that supports El Capitan. Download it along with the
license to =EXT:Storage=. Install it on the =Support Computer=.
*** VMWare Fusion
:PROPERTIES:
:ID:       B846A16A-4E1C-4968-B303-301923989BD8
:END:

[[https://www.vmware.com/products/fusion][Purchase]] a copy and download it to =EXT:Storage=. Download your license key.

** Support Computer
:PROPERTIES:
:ID:       74903C97-520F-4FE1-B2AA-09F1DAB976D7
:END:

Keep a working Mac nearby. You will use it to work with the contents of
your Git repositories, research configuration steps, and rest easy knowing that
you've always got a working machine.

Make sure that it has Internet access and download all of your Git repositories
required for configuring these machines.

Don't try use your host computer for this role by booting it to an external
drive; it is too easy to confuse partitions and what you are doing.

Use CCC to clone this Mac's partition, =Support:Macintosh HD=, to a partition on
=EXT=. The easiest thing to do is to connect =EXT=
to =Support Computer=. Create a new partition big enough to hold it and perform
the clone. Name it =EXT:Utility=. Reboot to it to test it.

** Host Computer: 44fad7
:PROPERTIES:
:ID:       EE23E7E0-4BAC-4B57-96EA-764F84A2F054
:END:

- Collect the Pristine Host Operating System Image (PHOSI)
  - Pristine means that it has never been logged into or configured
  - Has the latest OS X on it with at least the second fix pack or later
  - Verify that it contains the RP for that OS X on the disk
    - If the imaging takes less than 10 minutes then they didn't include the
      RP
  - You can easily get this from an appointment at the Genius Bar
- Create the Pristine Host Operating System Disk Image (PHOSDI)
  - Take your Mac home
  - Boot from =EXT:Utility=
  - Use CCC
    - From the host computer's =PHOSI=, =Host:Macintosh HD=
    - To
      - A new =PHOSDI=; *read-only* and *compressed* disk image
      - Located on =EXT:Storage=
    - Execute the imaging task
- Test =PHOSDI=
  - Boot into =Host:Macintosh HD=, configure it
  - Boot into =EXT:Support= and re-image =Host:Macintosh HD= from =PHOSDI=
  - Boot into =Host:Macintosh HD=
    - It should appear pristine, you need to enter all of the installation
      information again. This will be re-imaged again soon so don't worry
      about this.
  - Copy =EXT:Storage PHOSDI= to =Host:Storage=
- Create the =Host:Utility= partition using =PHOSDI=
  - Boot into =EXT:Support=
  - Create 1 new partition on =Host=, named =Utility=: 16GB
    - Now there are 3: =Macintosh HD=, =Support=, and =Utility=
  - Verify that you can
    - Boot into =Host:Support=
    - Install CCC
    - Access the =Storage= partition
      - CCC images
      - Disk images
      - Software
      - Scripts
* Notes on Machine Configurations & Snaphots
:PROPERTIES:
:ID:       2A536BBD-5CF0-43B8-A87C-9E2260ADE2F5
:END:
** Base (09d89d)
:PROPERTIES:
:ID:       33FE2B6C-EE9E-407E-96C3-41675669C9AE
:END:

- Configured with a =sysop= like above
- Unprovisioned
- Used for quickly cloning for user for anything

**** Steps
:PROPERTIES:
:ID:       CC55FA18-ADF8-4FE2-AA8E-477A3449F86F
:END:

- Obtain ~IOSEXECA~ via the App Store
  - Can do this on a Mac or in a VM of a prior version of OSX
  - Back it up to both =External:Storage= and =Host:Storage=
- Start VMWare Fusion, click File \rarr New, the "Select the Installation Method"
  dialog appears
- Create a new machine by dragging the OS X Installer onto the dialog
- Continue
- Default configuration don't change anything
  - 40GB HD, 2 CPU, 2GB RAM seems fine and allows you to have another VM
    running for notes during configuration
  - Assuming that 40GB will be enough to allow OS updates as they occur over
    the lifetime of the operating system
  - Full-Clones will configure the machine in unique ways not worth capturing
    here
- Click Finish
  - Name it "El Capitan - Base (09d89d)" and leave all of the default machine configuration
    alone
- Installation takes 20m every time
  - Installer reports "35s remaining" accurately, and then 0s remaining
    inaccurately, and sits there for about 5 minutes
  - Then it reports 20m remaining, and completes in 15m
  any personal information or configuration
- Set up box and create =sysop=, don't configure, don't provision:
  - Use the name =sysop= and password =sysop=
  - Don't do it like you set up the host
  - Don't provision or customize anything
  - Don't set up printers or resolution
  - Just create the account and do nothing more
- Shutdown

**** Snapshots
:PROPERTIES:
:ID:       7DB397B7-D0EC-4AD1-9BC8-3B80452D8890
:END:

***** First Run (d0a475)
:PROPERTIES:
:ID:       9F90A8E9-E4B3-486D-A9BD-243EF10CEAF1
:END:

- Installed, created user, shutdown
- This was the first run

** Personal (3a546a)
:PROPERTIES:
:ID:       E6395620-7A49-4FEC-9E06-15B27C1FC21C
:END:

*** Base (3d4a52)
:PROPERTIES:
:ID:       0B390891-5510-4703-97D7-29949F3D4436
:END:
**** Plan
:PROPERTIES:
:ID:       0967F184-B4A0-4B24-AB0D-5D3E95C3BB13
:END:
- *Full-Clone of 09d89d*
  - Right Click d0a475 \rarr Create Full Clone\ldots
  - Named "El Capitan - gcr (3a546a)"
- Machine config
  - Processors
    - 3 cores
      - [[https://pubs.vmware.com/fusion-7/index.jsp?topic=%252Fcom.vmware.fusion.help.doc%252FGUID-4EABCE73-69AB-4665-A5BB-B34C5B736CC7.html][Choosing]]
    - 6144 RAM
      - 2048 (2 GiB) for host
      - Two guests running at the same time
        - 7168 (7 GiB) each
    - Enable hypervisor
    - Enable code profiling
  - Hard Disk
    - 250.00 GB HD
  - Sharing
    - =Host:Storage=
- Start the VM
- Resize the disk
  - Note that on a real Mac you can't resize a partition that OS X has
    booted from so you might boot from the RP to perform
    the resize instead. This doesn't work on the VMWare drive. If you try it,
    it will fail for a couple of reasons like "The partition is not journaled"
    or "The operation filed". Instead, boot into the OS and resize the partition
    there.
  - Start DU
  - Choose VMWare Virtual SATA Hard Drive Media
  - Click "Partition"
  - Look at it to get a sense of the space for the main partition and what is
    actually available
  - Close DU
  - Read [[https://themacwrangler.wordpress.com/2015/10/21/resizing-el-capitan-mac-volumes-under-vmware-fusion/][this]] for a reference
  - Open Terminal
  - Execute:
    #+NAME: 1C325C18-9A6B-4A33-A969-42CC4DBE0598
    #+BEGIN_SRC sh
    sudo diskutil resizeVolume / R
    #+END_SRC
  - View the results, they should be what you expect
  - Verify in DU
- Change =sysop= password
- Install VMWare Tools
  - In El Capitan, the display driver works correctly so you can set any
    resolution via VMWare Fusion. You can verify in the VM.
- Provision this machine
  - Use the UUID
- Perform the "Manual Steps" setup for the sysop user on this box just like the
  host
  - The host =sysop= instruction note things unique to the host and guest
- Provision =sysop=
- Create, login as, perform the "Manual Stes", and provision =gcr=,
  log out and in again
- Install software updates via App Store
- Shutdown

*** Xcode (39e716)
:PROPERTIES:
:ID:       87802E09-F643-468B-819B-3C8EEB2D3E09
:END:

Downloading Xcode takes a long time so snapshot it.

*** VC/Shell (283c98)
:PROPERTIES:
:ID:       C31C9412-2922-4E4A-80BB-20749A95D742
:END:

Originally this was part of the =Writing= setup. I moved all of those steps into a
script

*** Git

This script is set up to me. To customize it just search and replace on:
- gcr@wisdomandwonder.com :: your email address for your SSH key
- orion :: the host name where this key lives
- gcr :: your username using this key
- =orgion_gcr_rsa= :: the name of your key used for Git
- github-grettke :: your SSH alias for Github
- bitbucket-grettke :: your SSH alias for Bitbucket
